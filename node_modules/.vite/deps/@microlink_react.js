import {
  _objectWithoutPropertiesLoose
} from "./chunk-YR5LAKKR.js";
import {
  _extends
} from "./chunk-EQCCHGRT.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __commonJS,
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/shallowequal/index.js
var require_shallowequal = __commonJS({
  "node_modules/shallowequal/index.js"(exports, module) {
    module.exports = function shallowEqual(objA, objB, compare, compareContext) {
      var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
      if (ret !== void 0) {
        return !!ret;
      }
      if (objA === objB) {
        return true;
      }
      if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
        return false;
      }
      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);
      if (keysA.length !== keysB.length) {
        return false;
      }
      var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
      for (var idx = 0; idx < keysA.length; idx++) {
        var key = keysA[idx];
        if (!bHasOwnProperty(key)) {
          return false;
        }
        var valueA = objA[key];
        var valueB = objB[key];
        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (ret === false || ret === void 0 && valueA !== valueB) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(o2) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof(o2);
}

// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function toPrimitive(t, r2) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i2 = e.call(t, r2 || "default");
    if ("object" != _typeof(i2)) return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t);
}

// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function toPropertyKey(t) {
  var i2 = toPrimitive(t, "string");
  return "symbol" == _typeof(i2) ? i2 : i2 + "";
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(e, r2, t) {
  return (r2 = toPropertyKey(r2)) in e ? Object.defineProperty(e, r2, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[r2] = t, e;
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o2, r2, i2 = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s2 = Object.getOwnPropertySymbols(e);
    for (r2 = 0; r2 < s2.length; r2++) o2 = s2[r2], t.includes(o2) || {}.propertyIsEnumerable.call(e, o2) && (i2[o2] = e[o2]);
  }
  return i2;
}

// node_modules/@microlink/react/dist/microlink.mjs
var import_react2 = __toESM(require_react(), 1);

// node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js
function _taggedTemplateLiteral(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {
    raw: {
      value: Object.freeze(t)
    }
  }));
}

// node_modules/styled-components/node_modules/tslib/tslib.es6.mjs
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s2, i2 = 1, n = arguments.length; i2 < n; i2++) {
      s2 = arguments[i2];
      for (var p2 in s2) if (Object.prototype.hasOwnProperty.call(s2, p2)) t[p2] = s2[p2];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __spreadArray(to, from2, pack) {
  if (pack || arguments.length === 2) for (var i2 = 0, l3 = from2.length, ar; i2 < l3; i2++) {
    if (ar || !(i2 in from2)) {
      if (!ar) ar = Array.prototype.slice.call(from2, 0, i2);
      ar[i2] = from2[i2];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from2));
}

// node_modules/styled-components/node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
function memoize(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0) cache[arg] = fn(arg);
    return cache[arg];
  };
}

// node_modules/styled-components/node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = memoize(
  function(prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
  }
  /* Z+1 */
);

// node_modules/styled-components/dist/styled-components.browser.esm.js
var import_react = __toESM(require_react());
var import_shallowequal = __toESM(require_shallowequal());

// node_modules/styled-components/node_modules/stylis/src/Enum.js
var MS = "-ms-";
var MOZ = "-moz-";
var WEBKIT = "-webkit-";
var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";
var LAYER = "@layer";

// node_modules/styled-components/node_modules/stylis/src/Utility.js
var abs = Math.abs;
var from = String.fromCharCode;
var assign = Object.assign;
function hash(value, length2) {
  return charat(value, 0) ^ 45 ? (((length2 << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3) : 0;
}
function trim(value) {
  return value.trim();
}
function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
function indexof(value, search, position2) {
  return value.indexOf(search, position2);
}
function charat(value, index) {
  return value.charCodeAt(index) | 0;
}
function substr(value, begin, end) {
  return value.slice(begin, end);
}
function strlen(value) {
  return value.length;
}
function sizeof(value) {
  return value.length;
}
function append(value, array) {
  return array.push(value), value;
}
function combine(array, callback) {
  return array.map(callback).join("");
}
function filter(array, pattern) {
  return array.filter(function(value) {
    return !match(value, pattern);
  });
}

// node_modules/styled-components/node_modules/stylis/src/Tokenizer.js
var line = 1;
var column = 1;
var length = 0;
var position = 0;
var character = 0;
var characters = "";
function node(value, root, parent, type, props, children, length2, siblings) {
  return { value, root, parent, type, props, children, line, column, length: length2, return: "", siblings };
}
function copy(root, props) {
  return assign(node("", null, null, "", null, null, 0, root.siblings), root, { length: -root.length }, props);
}
function lift(root) {
  while (root.root)
    root = copy(root.root, { children: [root] });
  append(root, root.siblings);
}
function char() {
  return character;
}
function prev() {
  character = position > 0 ? charat(characters, --position) : 0;
  if (column--, character === 10)
    column = 1, line--;
  return character;
}
function next() {
  character = position < length ? charat(characters, position++) : 0;
  if (column++, character === 10)
    column = 1, line++;
  return character;
}
function peek() {
  return charat(characters, position);
}
function caret() {
  return position;
}
function slice(begin, end) {
  return substr(characters, begin, end);
}
function token(type) {
  switch (type) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value) {
  return line = column = 1, length = strlen(characters = value), position = 0, [];
}
function dealloc(value) {
  return characters = "", value;
}
function delimit(type) {
  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
function whitespace(type) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type) {
  while (next())
    switch (character) {
      case type:
        return position;
      case 34:
      case 39:
        if (type !== 34 && type !== 39)
          delimiter(character);
        break;
      case 40:
        if (type === 41)
          delimiter(type);
        break;
      case 92:
        next();
        break;
    }
  return position;
}
function commenter(type, index) {
  while (next())
    if (type + character === 47 + 10)
      break;
    else if (type + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index, position - 1) + "*" + from(type === 47 ? type : next());
}
function identifier(index) {
  while (!token(peek()))
    next();
  return slice(index, position);
}

// node_modules/styled-components/node_modules/stylis/src/Parser.js
function compile(value) {
  return dealloc(parse("", null, null, null, [""], value = alloc(value), 0, [0], value));
}
function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index = 0;
  var offset = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type = "";
  var props = rules;
  var children = rulesets;
  var reference = rule;
  var characters2 = type;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 40:
        if (previous != 108 && charat(characters2, length2 - 1) == 58) {
          if (indexof(characters2 += replace(delimit(character2), "&", "&\f"), "&\f", abs(index ? points[index - 1] : 0)) != -1)
            ampersand = -1;
          break;
        }
      case 34:
      case 39:
      case 91:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root, parent, declarations), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset:
            if (ampersand == -1) characters2 = replace(characters2, /\f/g, "");
            if (property > 0 && strlen(characters2) - length2)
              append(property > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1, declarations) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2, declarations), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference = ruleset(characters2, root, parent, index, offset, rules, points, type, props = [], children = [], length2, rulesets), rulesets);
            if (character2 === 123)
              if (offset === 0)
                parse(characters2, root, reference, reference, props, rulesets, length2, points, children);
              else
                switch (atrule === 99 && charat(characters2, 3) === 110 ? 100 : atrule) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length2, children), children), rules, children, length2, points, rule ? props : children);
                    break;
                  default:
                    parse(characters2, reference, reference, reference, [""], children, 0, points, children);
                }
        }
        index = offset = property = 0, variable = ampersand = 1, type = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from(character2), character2 * variable) {
          case 38:
            ampersand = offset > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset = length2 = strlen(type = characters2 += identifier(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length2, siblings) {
  var post = offset - 1;
  var rule = offset === 0 ? rules : [""];
  var size = sizeof(rule);
  for (var i2 = 0, j2 = 0, k2 = 0; i2 < index; ++i2)
    for (var x2 = 0, y2 = substr(value, post + 1, post = abs(j2 = points[i2])), z2 = value; x2 < size; ++x2)
      if (z2 = trim(j2 > 0 ? rule[x2] + " " + y2 : replace(y2, /&\f/g, rule[x2])))
        props[k2++] = z2;
  return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length2, siblings);
}
function comment(value, root, parent, siblings) {
  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0, siblings);
}
function declaration(value, root, parent, length2, siblings) {
  return node(value, root, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2, siblings);
}

// node_modules/styled-components/node_modules/stylis/src/Prefixer.js
function prefix(value, length2, children) {
  switch (hash(value, length2)) {
    case 5103:
      return WEBKIT + "print-" + value + value;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + value + value;
    case 4789:
      return MOZ + value + value;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + value + MOZ + value + MS + value + value;
    case 5936:
      switch (charat(value, length2 + 11)) {
        case 114:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb") + value;
        case 108:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") + value;
        case 45:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "lr") + value;
      }
    case 6828:
    case 4268:
    case 2903:
      return WEBKIT + value + MS + value + value;
    case 6165:
      return WEBKIT + value + MS + "flex-" + value + value;
    case 5187:
      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + value;
    case 5443:
      return WEBKIT + value + MS + "flex-item-" + replace(value, /flex-|-self/g, "") + (!match(value, /flex-|baseline/) ? MS + "grid-row-" + replace(value, /flex-|-self/g, "") : "") + value;
    case 4675:
      return WEBKIT + value + MS + "flex-line-pack" + replace(value, /align-content|flex-|-self/g, "") + value;
    case 5548:
      return WEBKIT + value + MS + replace(value, "shrink", "negative") + value;
    case 5292:
      return WEBKIT + value + MS + replace(value, "basis", "preferred-size") + value;
    case 6060:
      return WEBKIT + "box-" + replace(value, "-grow", "") + WEBKIT + value + MS + replace(value, "grow", "positive") + value;
    case 4554:
      return WEBKIT + replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + value;
    case 6187:
      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), value, "") + value;
    case 5495:
    case 3959:
      return replace(value, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + value + value;
    case 4200:
      if (!match(value, /flex-|baseline/)) return MS + "grid-column-align" + substr(value, length2) + value;
      break;
    case 2592:
    case 3360:
      return MS + replace(value, "template-", "") + value;
    case 4384:
    case 3616:
      if (children && children.some(function(element, index) {
        return length2 = index, match(element.props, /grid-\w+-end/);
      })) {
        return ~indexof(value + (children = children[length2].value), "span", 0) ? value : MS + replace(value, "-start", "") + value + MS + "grid-row-span:" + (~indexof(children, "span", 0) ? match(children, /\d+/) : +match(children, /\d+/) - +match(value, /\d+/)) + ";";
      }
      return MS + replace(value, "-start", "") + value;
    case 4896:
    case 4128:
      return children && children.some(function(element) {
        return match(element.props, /grid-\w+-start/);
      }) ? value : MS + replace(replace(value, "-end", "-span"), "span ", "") + value;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(value) - 1 - length2 > 6)
        switch (charat(value, length2 + 1)) {
          case 109:
            if (charat(value, length2 + 4) !== 45)
              break;
          case 102:
            return replace(value, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(value, length2 + 3) == 108 ? "$3" : "$2-$3")) + value;
          case 115:
            return ~indexof(value, "stretch", 0) ? prefix(replace(value, "stretch", "fill-available"), length2, children) + value : value;
        }
      break;
    case 5152:
    case 5920:
      return replace(value, /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/, function(_2, a2, b, c2, d, e, f2) {
        return MS + a2 + ":" + b + f2 + (c2 ? MS + a2 + "-span:" + (d ? e : +e - +b) + f2 : "") + value;
      });
    case 4949:
      if (charat(value, length2 + 6) === 121)
        return replace(value, ":", ":" + WEBKIT) + value;
      break;
    case 6444:
      switch (charat(value, charat(value, 14) === 45 ? 18 : 11)) {
        case 120:
          return replace(value, /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/, "$1" + WEBKIT + (charat(value, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + value;
        case 100:
          return replace(value, ":", ":" + MS) + value;
      }
      break;
    case 5719:
    case 2647:
    case 2135:
    case 3927:
    case 2391:
      return replace(value, "scroll-", "scroll-snap-") + value;
  }
  return value;
}

// node_modules/styled-components/node_modules/stylis/src/Serializer.js
function serialize(children, callback) {
  var output = "";
  for (var i2 = 0; i2 < children.length; i2++)
    output += callback(children[i2], i2, children, callback) || "";
  return output;
}
function stringify(element, index, children, callback) {
  switch (element.type) {
    case LAYER:
      if (element.children.length) break;
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return element.return = element.value + "{" + serialize(element.children, callback) + "}";
    case RULESET:
      if (!strlen(element.value = element.props.join(","))) return "";
  }
  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + "{" + children + "}" : "";
}

// node_modules/styled-components/node_modules/stylis/src/Middleware.js
function middleware(collection) {
  var length2 = sizeof(collection);
  return function(element, index, children, callback) {
    var output = "";
    for (var i2 = 0; i2 < length2; i2++)
      output += collection[i2](element, index, children, callback) || "";
    return output;
  };
}
function rulesheet(callback) {
  return function(element) {
    if (!element.root) {
      if (element = element.return)
        callback(element);
    }
  };
}
function prefixer(element, index, children, callback) {
  if (element.length > -1) {
    if (!element.return)
      switch (element.type) {
        case DECLARATION:
          element.return = prefix(element.value, element.length, children);
          return;
        case KEYFRAMES:
          return serialize([copy(element, { value: replace(element.value, "@", "@" + WEBKIT) })], callback);
        case RULESET:
          if (element.length)
            return combine(children = element.props, function(value) {
              switch (match(value, callback = /(::plac\w+|:read-\w+)/)) {
                case ":read-only":
                case ":read-write":
                  lift(copy(element, { props: [replace(value, /:(read-\w+)/, ":" + MOZ + "$1")] }));
                  lift(copy(element, { props: [value] }));
                  assign(element, { props: filter(children, callback) });
                  break;
                case "::placeholder":
                  lift(copy(element, { props: [replace(value, /:(plac\w+)/, ":" + WEBKIT + "input-$1")] }));
                  lift(copy(element, { props: [replace(value, /:(plac\w+)/, ":" + MOZ + "$1")] }));
                  lift(copy(element, { props: [replace(value, /:(plac\w+)/, MS + "input-$1")] }));
                  lift(copy(element, { props: [value] }));
                  assign(element, { props: filter(children, callback) });
                  break;
              }
              return "";
            });
      }
  }
}

// node_modules/styled-components/node_modules/@emotion/unitless/dist/emotion-unitless.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

// node_modules/styled-components/dist/styled-components.browser.esm.js
var f = "undefined" != typeof process && void 0 !== process.env && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled";
var m = "active";
var y = "data-styled-version";
var v = "6.1.13";
var g = "/*!sc*/\n";
var S = "undefined" != typeof window && "HTMLElement" in window;
var w = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env && void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== process.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env && void 0 !== process.env.SC_DISABLE_SPEEDY && "" !== process.env.SC_DISABLE_SPEEDY ? "false" !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY : true);
var E = /invalid hook call/i;
var N = /* @__PURE__ */ new Set();
var P = function(t, n) {
  if (true) {
    var o2 = n ? ' with the id of "'.concat(n, '"') : "", s2 = "The component ".concat(t).concat(o2, " has been created dynamically.\n") + "You may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.", i2 = console.error;
    try {
      var a2 = true;
      console.error = function(t2) {
        for (var n2 = [], o3 = 1; o3 < arguments.length; o3++) n2[o3 - 1] = arguments[o3];
        E.test(t2) ? (a2 = false, N.delete(s2)) : i2.apply(void 0, __spreadArray([t2], n2, false));
      }, (0, import_react.useRef)(), a2 && !N.has(s2) && (console.warn(s2), N.add(s2));
    } catch (e) {
      E.test(e.message) && N.delete(s2);
    } finally {
      console.error = i2;
    }
  }
};
var _ = Object.freeze([]);
var C = Object.freeze({});
function I(e, t, n) {
  return void 0 === n && (n = C), e.theme !== n.theme && e.theme || t || n.theme;
}
var A = /* @__PURE__ */ new Set(["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "u", "ul", "use", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "tspan"]);
var O = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g;
var D = /(^-|-$)/g;
function R(e) {
  return e.replace(O, "-").replace(D, "");
}
var T = /(a)(d)/gi;
var k = 52;
var j = function(e) {
  return String.fromCharCode(e + (e > 25 ? 39 : 97));
};
function x(e) {
  var t, n = "";
  for (t = Math.abs(e); t > k; t = t / k | 0) n = j(t % k) + n;
  return (j(t % k) + n).replace(T, "$1-$2");
}
var V;
var F = 5381;
var M = function(e, t) {
  for (var n = t.length; n; ) e = 33 * e ^ t.charCodeAt(--n);
  return e;
};
var z = function(e) {
  return M(F, e);
};
function $(e) {
  return x(z(e) >>> 0);
}
function B(e) {
  return "string" == typeof e && e || e.displayName || e.name || "Component";
}
function L(e) {
  return "string" == typeof e && e.charAt(0) === e.charAt(0).toLowerCase();
}
var G = "function" == typeof Symbol && Symbol.for;
var Y = G ? Symbol.for("react.memo") : 60115;
var W = G ? Symbol.for("react.forward_ref") : 60112;
var q = { childContextTypes: true, contextType: true, contextTypes: true, defaultProps: true, displayName: true, getDefaultProps: true, getDerivedStateFromError: true, getDerivedStateFromProps: true, mixins: true, propTypes: true, type: true };
var H = { name: true, length: true, prototype: true, caller: true, callee: true, arguments: true, arity: true };
var U = { $$typeof: true, compare: true, defaultProps: true, displayName: true, propTypes: true, type: true };
var J = ((V = {})[W] = { $$typeof: true, render: true, defaultProps: true, displayName: true, propTypes: true }, V[Y] = U, V);
function X(e) {
  return ("type" in (t = e) && t.type.$$typeof) === Y ? U : "$$typeof" in e ? J[e.$$typeof] : q;
  var t;
}
var Z = Object.defineProperty;
var K = Object.getOwnPropertyNames;
var Q = Object.getOwnPropertySymbols;
var ee = Object.getOwnPropertyDescriptor;
var te = Object.getPrototypeOf;
var ne = Object.prototype;
function oe(e, t, n) {
  if ("string" != typeof t) {
    if (ne) {
      var o2 = te(t);
      o2 && o2 !== ne && oe(e, o2, n);
    }
    var r2 = K(t);
    Q && (r2 = r2.concat(Q(t)));
    for (var s2 = X(e), i2 = X(t), a2 = 0; a2 < r2.length; ++a2) {
      var c2 = r2[a2];
      if (!(c2 in H || n && n[c2] || i2 && c2 in i2 || s2 && c2 in s2)) {
        var l3 = ee(t, c2);
        try {
          Z(e, c2, l3);
        } catch (e2) {
        }
      }
    }
  }
  return e;
}
function re(e) {
  return "function" == typeof e;
}
function se(e) {
  return "object" == typeof e && "styledComponentId" in e;
}
function ie(e, t) {
  return e && t ? "".concat(e, " ").concat(t) : e || t || "";
}
function ae(e, t) {
  if (0 === e.length) return "";
  for (var n = e[0], o2 = 1; o2 < e.length; o2++) n += t ? t + e[o2] : e[o2];
  return n;
}
function ce(e) {
  return null !== e && "object" == typeof e && e.constructor.name === Object.name && !("props" in e && e.$$typeof);
}
function le(e, t, n) {
  if (void 0 === n && (n = false), !n && !ce(e) && !Array.isArray(e)) return t;
  if (Array.isArray(t)) for (var o2 = 0; o2 < t.length; o2++) e[o2] = le(e[o2], t[o2]);
  else if (ce(t)) for (var o2 in t) e[o2] = le(e[o2], t[o2]);
  return e;
}
function ue(e, t) {
  Object.defineProperty(e, "toString", { value: t });
}
var pe = true ? { 1: "Cannot create styled-component for component: %s.\n\n", 2: "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n", 3: "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n", 4: "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n", 5: "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n", 6: "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n", 7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n', 8: 'ThemeProvider: Please make your "theme" prop an object.\n\n', 9: "Missing document `<head>`\n\n", 10: "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n", 11: "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n", 12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n", 13: "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n", 14: 'ThemeProvider: "theme" prop is required.\n\n', 15: "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n", 16: "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n", 17: "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n", 18: "ThemeProvider: Please make sure your useTheme hook is within a `<ThemeProvider>`" } : {};
function de() {
  for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
  for (var n = e[0], o2 = [], r2 = 1, s2 = e.length; r2 < s2; r2 += 1) o2.push(e[r2]);
  return o2.forEach(function(e2) {
    n = n.replace(/%[a-z]/, e2);
  }), n;
}
function he(t) {
  for (var n = [], o2 = 1; o2 < arguments.length; o2++) n[o2 - 1] = arguments[o2];
  return false ? new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(t, " for more information.").concat(n.length > 0 ? " Args: ".concat(n.join(", ")) : "")) : new Error(de.apply(void 0, __spreadArray([pe[t]], n, false)).trim());
}
var fe = function() {
  function e(e2) {
    this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e2;
  }
  return e.prototype.indexOfGroup = function(e2) {
    for (var t = 0, n = 0; n < e2; n++) t += this.groupSizes[n];
    return t;
  }, e.prototype.insertRules = function(e2, t) {
    if (e2 >= this.groupSizes.length) {
      for (var n = this.groupSizes, o2 = n.length, r2 = o2; e2 >= r2; ) if ((r2 <<= 1) < 0) throw he(16, "".concat(e2));
      this.groupSizes = new Uint32Array(r2), this.groupSizes.set(n), this.length = r2;
      for (var s2 = o2; s2 < r2; s2++) this.groupSizes[s2] = 0;
    }
    for (var i2 = this.indexOfGroup(e2 + 1), a2 = (s2 = 0, t.length); s2 < a2; s2++) this.tag.insertRule(i2, t[s2]) && (this.groupSizes[e2]++, i2++);
  }, e.prototype.clearGroup = function(e2) {
    if (e2 < this.length) {
      var t = this.groupSizes[e2], n = this.indexOfGroup(e2), o2 = n + t;
      this.groupSizes[e2] = 0;
      for (var r2 = n; r2 < o2; r2++) this.tag.deleteRule(n);
    }
  }, e.prototype.getGroup = function(e2) {
    var t = "";
    if (e2 >= this.length || 0 === this.groupSizes[e2]) return t;
    for (var n = this.groupSizes[e2], o2 = this.indexOfGroup(e2), r2 = o2 + n, s2 = o2; s2 < r2; s2++) t += "".concat(this.tag.getRule(s2)).concat(g);
    return t;
  }, e;
}();
var me = 1 << 30;
var ye = /* @__PURE__ */ new Map();
var ve = /* @__PURE__ */ new Map();
var ge = 1;
var Se = function(e) {
  if (ye.has(e)) return ye.get(e);
  for (; ve.has(ge); ) ge++;
  var t = ge++;
  if ((0 | t) < 0 || t > me) throw he(16, "".concat(t));
  return ye.set(e, t), ve.set(t, e), t;
};
var we = function(e, t) {
  ge = t + 1, ye.set(e, t), ve.set(t, e);
};
var be = "style[".concat(f, "][").concat(y, '="').concat(v, '"]');
var Ee = new RegExp("^".concat(f, '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'));
var Ne = function(e, t, n) {
  for (var o2, r2 = n.split(","), s2 = 0, i2 = r2.length; s2 < i2; s2++) (o2 = r2[s2]) && e.registerName(t, o2);
};
var Pe = function(e, t) {
  for (var n, o2 = (null !== (n = t.textContent) && void 0 !== n ? n : "").split(g), r2 = [], s2 = 0, i2 = o2.length; s2 < i2; s2++) {
    var a2 = o2[s2].trim();
    if (a2) {
      var c2 = a2.match(Ee);
      if (c2) {
        var l3 = 0 | parseInt(c2[1], 10), u2 = c2[2];
        0 !== l3 && (we(u2, l3), Ne(e, u2, c2[3]), e.getTag().insertRules(l3, r2)), r2.length = 0;
      } else r2.push(a2);
    }
  }
};
var _e = function(e) {
  for (var t = document.querySelectorAll(be), n = 0, o2 = t.length; n < o2; n++) {
    var r2 = t[n];
    r2 && r2.getAttribute(f) !== m && (Pe(e, r2), r2.parentNode && r2.parentNode.removeChild(r2));
  }
};
function Ce() {
  return "undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : null;
}
var Ie = function(e) {
  var t = document.head, n = e || t, o2 = document.createElement("style"), r2 = function(e2) {
    var t2 = Array.from(e2.querySelectorAll("style[".concat(f, "]")));
    return t2[t2.length - 1];
  }(n), s2 = void 0 !== r2 ? r2.nextSibling : null;
  o2.setAttribute(f, m), o2.setAttribute(y, v);
  var i2 = Ce();
  return i2 && o2.setAttribute("nonce", i2), n.insertBefore(o2, s2), o2;
};
var Ae = function() {
  function e(e2) {
    this.element = Ie(e2), this.element.appendChild(document.createTextNode("")), this.sheet = function(e3) {
      if (e3.sheet) return e3.sheet;
      for (var t = document.styleSheets, n = 0, o2 = t.length; n < o2; n++) {
        var r2 = t[n];
        if (r2.ownerNode === e3) return r2;
      }
      throw he(17);
    }(this.element), this.length = 0;
  }
  return e.prototype.insertRule = function(e2, t) {
    try {
      return this.sheet.insertRule(t, e2), this.length++, true;
    } catch (e3) {
      return false;
    }
  }, e.prototype.deleteRule = function(e2) {
    this.sheet.deleteRule(e2), this.length--;
  }, e.prototype.getRule = function(e2) {
    var t = this.sheet.cssRules[e2];
    return t && t.cssText ? t.cssText : "";
  }, e;
}();
var Oe = function() {
  function e(e2) {
    this.element = Ie(e2), this.nodes = this.element.childNodes, this.length = 0;
  }
  return e.prototype.insertRule = function(e2, t) {
    if (e2 <= this.length && e2 >= 0) {
      var n = document.createTextNode(t);
      return this.element.insertBefore(n, this.nodes[e2] || null), this.length++, true;
    }
    return false;
  }, e.prototype.deleteRule = function(e2) {
    this.element.removeChild(this.nodes[e2]), this.length--;
  }, e.prototype.getRule = function(e2) {
    return e2 < this.length ? this.nodes[e2].textContent : "";
  }, e;
}();
var De = function() {
  function e(e2) {
    this.rules = [], this.length = 0;
  }
  return e.prototype.insertRule = function(e2, t) {
    return e2 <= this.length && (this.rules.splice(e2, 0, t), this.length++, true);
  }, e.prototype.deleteRule = function(e2) {
    this.rules.splice(e2, 1), this.length--;
  }, e.prototype.getRule = function(e2) {
    return e2 < this.length ? this.rules[e2] : "";
  }, e;
}();
var Re = S;
var Te = { isServer: !S, useCSSOMInjection: !w };
var ke = function() {
  function e(e2, n, o2) {
    void 0 === e2 && (e2 = C), void 0 === n && (n = {});
    var r2 = this;
    this.options = __assign(__assign({}, Te), e2), this.gs = n, this.names = new Map(o2), this.server = !!e2.isServer, !this.server && S && Re && (Re = false, _e(this)), ue(this, function() {
      return function(e3) {
        for (var t = e3.getTag(), n2 = t.length, o3 = "", r3 = function(n3) {
          var r4 = function(e4) {
            return ve.get(e4);
          }(n3);
          if (void 0 === r4) return "continue";
          var s3 = e3.names.get(r4), i2 = t.getGroup(n3);
          if (void 0 === s3 || !s3.size || 0 === i2.length) return "continue";
          var a2 = "".concat(f, ".g").concat(n3, '[id="').concat(r4, '"]'), c2 = "";
          void 0 !== s3 && s3.forEach(function(e4) {
            e4.length > 0 && (c2 += "".concat(e4, ","));
          }), o3 += "".concat(i2).concat(a2, '{content:"').concat(c2, '"}').concat(g);
        }, s2 = 0; s2 < n2; s2++) r3(s2);
        return o3;
      }(r2);
    });
  }
  return e.registerId = function(e2) {
    return Se(e2);
  }, e.prototype.rehydrate = function() {
    !this.server && S && _e(this);
  }, e.prototype.reconstructWithOptions = function(n, o2) {
    return void 0 === o2 && (o2 = true), new e(__assign(__assign({}, this.options), n), this.gs, o2 && this.names || void 0);
  }, e.prototype.allocateGSInstance = function(e2) {
    return this.gs[e2] = (this.gs[e2] || 0) + 1;
  }, e.prototype.getTag = function() {
    return this.tag || (this.tag = (e2 = function(e3) {
      var t = e3.useCSSOMInjection, n = e3.target;
      return e3.isServer ? new De(n) : t ? new Ae(n) : new Oe(n);
    }(this.options), new fe(e2)));
    var e2;
  }, e.prototype.hasNameForId = function(e2, t) {
    return this.names.has(e2) && this.names.get(e2).has(t);
  }, e.prototype.registerName = function(e2, t) {
    if (Se(e2), this.names.has(e2)) this.names.get(e2).add(t);
    else {
      var n = /* @__PURE__ */ new Set();
      n.add(t), this.names.set(e2, n);
    }
  }, e.prototype.insertRules = function(e2, t, n) {
    this.registerName(e2, t), this.getTag().insertRules(Se(e2), n);
  }, e.prototype.clearNames = function(e2) {
    this.names.has(e2) && this.names.get(e2).clear();
  }, e.prototype.clearRules = function(e2) {
    this.getTag().clearGroup(Se(e2)), this.clearNames(e2);
  }, e.prototype.clearTag = function() {
    this.tag = void 0;
  }, e;
}();
var je = /&/g;
var xe = /^\s*\/\/.*$/gm;
function Ve(e, t) {
  return e.map(function(e2) {
    return "rule" === e2.type && (e2.value = "".concat(t, " ").concat(e2.value), e2.value = e2.value.replaceAll(",", ",".concat(t, " ")), e2.props = e2.props.map(function(e3) {
      return "".concat(t, " ").concat(e3);
    })), Array.isArray(e2.children) && "@keyframes" !== e2.type && (e2.children = Ve(e2.children, t)), e2;
  });
}
function Fe(e) {
  var t, n, o2, r2 = void 0 === e ? C : e, s2 = r2.options, i2 = void 0 === s2 ? C : s2, a2 = r2.plugins, c2 = void 0 === a2 ? _ : a2, l3 = function(e2, o3, r3) {
    return r3.startsWith(n) && r3.endsWith(n) && r3.replaceAll(n, "").length > 0 ? ".".concat(t) : e2;
  }, u2 = c2.slice();
  u2.push(function(e2) {
    e2.type === RULESET && e2.value.includes("&") && (e2.props[0] = e2.props[0].replace(je, n).replace(o2, l3));
  }), i2.prefix && u2.push(prefixer), u2.push(stringify);
  var p2 = function(e2, r3, s3, a3) {
    void 0 === r3 && (r3 = ""), void 0 === s3 && (s3 = ""), void 0 === a3 && (a3 = "&"), t = a3, n = r3, o2 = new RegExp("\\".concat(n, "\\b"), "g");
    var c3 = e2.replace(xe, ""), l4 = compile(s3 || r3 ? "".concat(s3, " ").concat(r3, " { ").concat(c3, " }") : c3);
    i2.namespace && (l4 = Ve(l4, i2.namespace));
    var p3 = [];
    return serialize(l4, middleware(u2.concat(rulesheet(function(e3) {
      return p3.push(e3);
    })))), p3;
  };
  return p2.hash = c2.length ? c2.reduce(function(e2, t2) {
    return t2.name || he(15), M(e2, t2.name);
  }, F).toString() : "", p2;
}
var Me = new ke();
var ze = Fe();
var $e = import_react.default.createContext({ shouldForwardProp: void 0, styleSheet: Me, stylis: ze });
var Be = $e.Consumer;
var Le = import_react.default.createContext(void 0);
function Ge() {
  return (0, import_react.useContext)($e);
}
function Ye(e) {
  var t = (0, import_react.useState)(e.stylisPlugins), n = t[0], r2 = t[1], c2 = Ge().styleSheet, l3 = (0, import_react.useMemo)(function() {
    var t2 = c2;
    return e.sheet ? t2 = e.sheet : e.target && (t2 = t2.reconstructWithOptions({ target: e.target }, false)), e.disableCSSOMInjection && (t2 = t2.reconstructWithOptions({ useCSSOMInjection: false })), t2;
  }, [e.disableCSSOMInjection, e.sheet, e.target, c2]), u2 = (0, import_react.useMemo)(function() {
    return Fe({ options: { namespace: e.namespace, prefix: e.enableVendorPrefixes }, plugins: n });
  }, [e.enableVendorPrefixes, e.namespace, n]);
  (0, import_react.useEffect)(function() {
    (0, import_shallowequal.default)(n, e.stylisPlugins) || r2(e.stylisPlugins);
  }, [e.stylisPlugins]);
  var d = (0, import_react.useMemo)(function() {
    return { shouldForwardProp: e.shouldForwardProp, styleSheet: l3, stylis: u2 };
  }, [e.shouldForwardProp, l3, u2]);
  return import_react.default.createElement($e.Provider, { value: d }, import_react.default.createElement(Le.Provider, { value: u2 }, e.children));
}
var We = function() {
  function e(e2, t) {
    var n = this;
    this.inject = function(e3, t2) {
      void 0 === t2 && (t2 = ze);
      var o2 = n.name + t2.hash;
      e3.hasNameForId(n.id, o2) || e3.insertRules(n.id, o2, t2(n.rules, o2, "@keyframes"));
    }, this.name = e2, this.id = "sc-keyframes-".concat(e2), this.rules = t, ue(this, function() {
      throw he(12, String(n.name));
    });
  }
  return e.prototype.getName = function(e2) {
    return void 0 === e2 && (e2 = ze), this.name + e2.hash;
  }, e;
}();
var qe = function(e) {
  return e >= "A" && e <= "Z";
};
function He(e) {
  for (var t = "", n = 0; n < e.length; n++) {
    var o2 = e[n];
    if (1 === n && "-" === o2 && "-" === e[0]) return e;
    qe(o2) ? t += "-" + o2.toLowerCase() : t += o2;
  }
  return t.startsWith("ms-") ? "-" + t : t;
}
var Ue = function(e) {
  return null == e || false === e || "" === e;
};
var Je = function(t) {
  var n, o2, r2 = [];
  for (var s2 in t) {
    var i2 = t[s2];
    t.hasOwnProperty(s2) && !Ue(i2) && (Array.isArray(i2) && i2.isCss || re(i2) ? r2.push("".concat(He(s2), ":"), i2, ";") : ce(i2) ? r2.push.apply(r2, __spreadArray(__spreadArray(["".concat(s2, " {")], Je(i2), false), ["}"], false)) : r2.push("".concat(He(s2), ": ").concat((n = s2, null == (o2 = i2) || "boolean" == typeof o2 || "" === o2 ? "" : "number" != typeof o2 || 0 === o2 || n in unitlessKeys || n.startsWith("--") ? String(o2).trim() : "".concat(o2, "px")), ";")));
  }
  return r2;
};
function Xe(e, t, n, o2) {
  if (Ue(e)) return [];
  if (se(e)) return [".".concat(e.styledComponentId)];
  if (re(e)) {
    if (!re(s2 = e) || s2.prototype && s2.prototype.isReactComponent || !t) return [e];
    var r2 = e(t);
    return "object" != typeof r2 || Array.isArray(r2) || r2 instanceof We || ce(r2) || null === r2 || console.error("".concat(B(e), " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.")), Xe(r2, t, n, o2);
  }
  var s2;
  return e instanceof We ? n ? (e.inject(n, o2), [e.getName(o2)]) : [e] : ce(e) ? Je(e) : Array.isArray(e) ? Array.prototype.concat.apply(_, e.map(function(e2) {
    return Xe(e2, t, n, o2);
  })) : [e.toString()];
}
function Ze(e) {
  for (var t = 0; t < e.length; t += 1) {
    var n = e[t];
    if (re(n) && !se(n)) return false;
  }
  return true;
}
var Ke = z(v);
var Qe = function() {
  function e(e2, t, n) {
    this.rules = e2, this.staticRulesId = "", this.isStatic = false, this.componentId = t, this.baseHash = M(Ke, t), this.baseStyle = n, ke.registerId(t);
  }
  return e.prototype.generateAndInjectStyles = function(e2, t, n) {
    var o2 = this.baseStyle ? this.baseStyle.generateAndInjectStyles(e2, t, n) : "";
    if (this.isStatic && !n.hash) if (this.staticRulesId && t.hasNameForId(this.componentId, this.staticRulesId)) o2 = ie(o2, this.staticRulesId);
    else {
      var r2 = ae(Xe(this.rules, e2, t, n)), s2 = x(M(this.baseHash, r2) >>> 0);
      if (!t.hasNameForId(this.componentId, s2)) {
        var i2 = n(r2, ".".concat(s2), void 0, this.componentId);
        t.insertRules(this.componentId, s2, i2);
      }
      o2 = ie(o2, s2), this.staticRulesId = s2;
    }
    else {
      for (var a2 = M(this.baseHash, n.hash), c2 = "", l3 = 0; l3 < this.rules.length; l3++) {
        var u2 = this.rules[l3];
        if ("string" == typeof u2) c2 += u2, a2 = M(a2, u2);
        else if (u2) {
          var p2 = ae(Xe(u2, e2, t, n));
          a2 = M(a2, p2 + l3), c2 += p2;
        }
      }
      if (c2) {
        var d = x(a2 >>> 0);
        t.hasNameForId(this.componentId, d) || t.insertRules(this.componentId, d, n(c2, ".".concat(d), void 0, this.componentId)), o2 = ie(o2, d);
      }
    }
    return o2;
  }, e;
}();
var et = import_react.default.createContext(void 0);
var tt = et.Consumer;
var rt = {};
var st = /* @__PURE__ */ new Set();
function it(e, r2, s2) {
  var i2 = se(e), a2 = e, c2 = !L(e), p2 = r2.attrs, d = void 0 === p2 ? _ : p2, h = r2.componentId, f2 = void 0 === h ? function(e2, t) {
    var n = "string" != typeof e2 ? "sc" : R(e2);
    rt[n] = (rt[n] || 0) + 1;
    var o2 = "".concat(n, "-").concat($(v + n + rt[n]));
    return t ? "".concat(t, "-").concat(o2) : o2;
  }(r2.displayName, r2.parentComponentId) : h, m2 = r2.displayName, y2 = void 0 === m2 ? function(e2) {
    return L(e2) ? "styled.".concat(e2) : "Styled(".concat(B(e2), ")");
  }(e) : m2, g2 = r2.displayName && r2.componentId ? "".concat(R(r2.displayName), "-").concat(r2.componentId) : r2.componentId || f2, S2 = i2 && a2.attrs ? a2.attrs.concat(d).filter(Boolean) : d, w2 = r2.shouldForwardProp;
  if (i2 && a2.shouldForwardProp) {
    var b = a2.shouldForwardProp;
    if (r2.shouldForwardProp) {
      var E2 = r2.shouldForwardProp;
      w2 = function(e2, t) {
        return b(e2, t) && E2(e2, t);
      };
    } else w2 = b;
  }
  var N2 = new Qe(s2, g2, i2 ? a2.componentStyle : void 0);
  function O2(e2, r3) {
    return function(e3, r4, s3) {
      var i3 = e3.attrs, a3 = e3.componentStyle, c3 = e3.defaultProps, p3 = e3.foldedComponentIds, d2 = e3.styledComponentId, h2 = e3.target, f3 = import_react.default.useContext(et), m3 = Ge(), y3 = e3.shouldForwardProp || m3.shouldForwardProp;
      (0, import_react.useDebugValue)(d2);
      var v2 = I(r4, f3, c3) || C, g3 = function(e4, n, o2) {
        for (var r5, s4 = __assign(__assign({}, n), { className: void 0, theme: o2 }), i4 = 0; i4 < e4.length; i4 += 1) {
          var a4 = re(r5 = e4[i4]) ? r5(s4) : r5;
          for (var c4 in a4) s4[c4] = "className" === c4 ? ie(s4[c4], a4[c4]) : "style" === c4 ? __assign(__assign({}, s4[c4]), a4[c4]) : a4[c4];
        }
        return n.className && (s4.className = ie(s4.className, n.className)), s4;
      }(i3, r4, v2), S3 = g3.as || h2, w3 = {};
      for (var b2 in g3) void 0 === g3[b2] || "$" === b2[0] || "as" === b2 || "theme" === b2 && g3.theme === v2 || ("forwardedAs" === b2 ? w3.as = g3.forwardedAs : y3 && !y3(b2, S3) || (w3[b2] = g3[b2], y3 || false || isPropValid(b2) || st.has(b2) || !A.has(S3) || (st.add(b2), console.warn('styled-components: it looks like an unknown prop "'.concat(b2, '" is being sent through to the DOM, which will likely trigger a React console error. If you would like automatic filtering of unknown props, you can opt-into that behavior via `<StyleSheetManager shouldForwardProp={...}>` (connect an API like `@emotion/is-prop-valid`) or consider using transient props (`$` prefix for automatic filtering.)')))));
      var E3 = function(e4, t) {
        var n = Ge(), o2 = e4.generateAndInjectStyles(t, n.styleSheet, n.stylis);
        return (0, import_react.useDebugValue)(o2), o2;
      }(a3, g3);
      e3.warnTooManyClasses && e3.warnTooManyClasses(E3);
      var N3 = ie(p3, d2);
      return E3 && (N3 += " " + E3), g3.className && (N3 += " " + g3.className), w3[L(S3) && !A.has(S3) ? "class" : "className"] = N3, w3.ref = s3, (0, import_react.createElement)(S3, w3);
    }(D2, e2, r3);
  }
  O2.displayName = y2;
  var D2 = import_react.default.forwardRef(O2);
  return D2.attrs = S2, D2.componentStyle = N2, D2.displayName = y2, D2.shouldForwardProp = w2, D2.foldedComponentIds = i2 ? ie(a2.foldedComponentIds, a2.styledComponentId) : "", D2.styledComponentId = g2, D2.target = i2 ? a2.target : e, Object.defineProperty(D2, "defaultProps", { get: function() {
    return this._foldedDefaultProps;
  }, set: function(e2) {
    this._foldedDefaultProps = i2 ? function(e3) {
      for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
      for (var o2 = 0, r3 = t; o2 < r3.length; o2++) le(e3, r3[o2], true);
      return e3;
    }({}, a2.defaultProps, e2) : e2;
  } }), P(y2, g2), D2.warnTooManyClasses = /* @__PURE__ */ function(e2, t) {
    var n = {}, o2 = false;
    return function(r3) {
      if (!o2 && (n[r3] = true, Object.keys(n).length >= 200)) {
        var s3 = t ? ' with the id of "'.concat(t, '"') : "";
        console.warn("Over ".concat(200, " classes were generated for component ").concat(e2).concat(s3, ".\n") + "Consider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"), o2 = true, n = {};
      }
    };
  }(y2, g2), ue(D2, function() {
    return ".".concat(D2.styledComponentId);
  }), c2 && oe(D2, e, { attrs: true, componentStyle: true, displayName: true, foldedComponentIds: true, shouldForwardProp: true, styledComponentId: true, target: true }), D2;
}
function at(e, t) {
  for (var n = [e[0]], o2 = 0, r2 = t.length; o2 < r2; o2 += 1) n.push(t[o2], e[o2 + 1]);
  return n;
}
var ct = function(e) {
  return Object.assign(e, { isCss: true });
};
function lt(t) {
  for (var n = [], o2 = 1; o2 < arguments.length; o2++) n[o2 - 1] = arguments[o2];
  if (re(t) || ce(t)) return ct(Xe(at(_, __spreadArray([t], n, true))));
  var r2 = t;
  return 0 === n.length && 1 === r2.length && "string" == typeof r2[0] ? Xe(r2) : ct(Xe(at(r2, n)));
}
function ut(n, o2, r2) {
  if (void 0 === r2 && (r2 = C), !o2) throw he(1, o2);
  var s2 = function(t) {
    for (var s3 = [], i2 = 1; i2 < arguments.length; i2++) s3[i2 - 1] = arguments[i2];
    return n(o2, r2, lt.apply(void 0, __spreadArray([t], s3, false)));
  };
  return s2.attrs = function(e) {
    return ut(n, o2, __assign(__assign({}, r2), { attrs: Array.prototype.concat(r2.attrs, e).filter(Boolean) }));
  }, s2.withConfig = function(e) {
    return ut(n, o2, __assign(__assign({}, r2), e));
  }, s2;
}
var pt = function(e) {
  return ut(it, e);
};
var dt = pt;
A.forEach(function(e) {
  dt[e] = pt(e);
});
var ht = function() {
  function e(e2, t) {
    this.rules = e2, this.componentId = t, this.isStatic = Ze(e2), ke.registerId(this.componentId + 1);
  }
  return e.prototype.createStyles = function(e2, t, n, o2) {
    var r2 = o2(ae(Xe(this.rules, t, n, o2)), ""), s2 = this.componentId + e2;
    n.insertRules(s2, s2, r2);
  }, e.prototype.removeStyles = function(e2, t) {
    t.clearRules(this.componentId + e2);
  }, e.prototype.renderStyles = function(e2, t, n, o2) {
    e2 > 2 && ke.registerId(this.componentId + e2), this.removeStyles(e2, n), this.createStyles(e2, t, n, o2);
  }, e;
}();
function mt(t) {
  for (var n = [], o2 = 1; o2 < arguments.length; o2++) n[o2 - 1] = arguments[o2];
  "undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");
  var r2 = ae(lt.apply(void 0, __spreadArray([t], n, false))), s2 = $(r2);
  return new We(s2, r2);
}
var vt = function() {
  function e() {
    var e2 = this;
    this._emitSheetCSS = function() {
      var t = e2.instance.toString();
      if (!t) return "";
      var n = Ce(), o2 = ae([n && 'nonce="'.concat(n, '"'), "".concat(f, '="true"'), "".concat(y, '="').concat(v, '"')].filter(Boolean), " ");
      return "<style ".concat(o2, ">").concat(t, "</style>");
    }, this.getStyleTags = function() {
      if (e2.sealed) throw he(2);
      return e2._emitSheetCSS();
    }, this.getStyleElement = function() {
      var n;
      if (e2.sealed) throw he(2);
      var r2 = e2.instance.toString();
      if (!r2) return [];
      var s2 = ((n = {})[f] = "", n[y] = v, n.dangerouslySetInnerHTML = { __html: r2 }, n), i2 = Ce();
      return i2 && (s2.nonce = i2), [import_react.default.createElement("style", __assign({}, s2, { key: "sc-0-0" }))];
    }, this.seal = function() {
      e2.sealed = true;
    }, this.instance = new ke({ isServer: true }), this.sealed = false;
  }
  return e.prototype.collectStyles = function(e2) {
    if (this.sealed) throw he(2);
    return import_react.default.createElement(Ye, { sheet: this.instance }, e2);
  }, e.prototype.interleaveWithNodeStream = function(e2) {
    throw he(3);
  }, e;
}();
"undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native");
var St = "__sc-".concat(f, "__");
"undefined" != typeof window && (window[St] || (window[St] = 0), 1 === window[St] && console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."), window[St] += 1);

// node_modules/@microlink/mql/lightweight/index.js
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function getAugmentedNamespace(n) {
  if (n.__esModule) return n;
  var f2 = n.default;
  if (typeof f2 == "function") {
    var a2 = function a3() {
      if (this instanceof a3) {
        return Reflect.construct(f2, arguments, this.constructor);
      }
      return f2.apply(this, arguments);
    };
    a2.prototype = f2.prototype;
  } else a2 = {};
  Object.defineProperty(a2, "__esModule", { value: true });
  Object.keys(n).forEach(function(k2) {
    var d = Object.getOwnPropertyDescriptor(n, k2);
    Object.defineProperty(a2, k2, d.get ? d : {
      enumerable: true,
      get: function() {
        return n[k2];
      }
    });
  });
  return a2;
}
var lightweight$2 = { exports: {} };
var REGEX_HTTP_PROTOCOL = /^https?:\/\//i;
var lightweight$1 = (url) => {
  try {
    const { href } = new URL(url);
    return REGEX_HTTP_PROTOCOL.test(href) && href;
  } catch (err) {
    return false;
  }
};
var dist = {};
function iter(output, nullish, sep, val, key) {
  var k2, pfx = key ? key + sep : key;
  if (val == null) {
    if (nullish) output[key] = val;
  } else if (typeof val != "object") {
    output[key] = val;
  } else if (Array.isArray(val)) {
    for (k2 = 0; k2 < val.length; k2++) {
      iter(output, nullish, sep, val[k2], pfx + k2);
    }
  } else {
    for (k2 in val) {
      iter(output, nullish, sep, val[k2], pfx + k2);
    }
  }
}
function flattie(input, glue, toNull) {
  var output = {};
  if (typeof input == "object") {
    iter(output, !!toNull, glue || ".", input, "");
  }
  return output;
}
dist.flattie = flattie;
var HTTPError = class extends Error {
  constructor(response, request, options) {
    const code = response.status || response.status === 0 ? response.status : "";
    const title = response.statusText || "";
    const status = `${code} ${title}`.trim();
    const reason = status ? `status code ${status}` : "an unknown error";
    super(`Request failed with ${reason}`);
    Object.defineProperty(this, "response", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "request", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "options", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    this.name = "HTTPError";
    this.response = response;
    this.request = request;
    this.options = options;
  }
};
var TimeoutError = class extends Error {
  constructor(request) {
    super("Request timed out");
    Object.defineProperty(this, "request", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    this.name = "TimeoutError";
    this.request = request;
  }
};
var isObject$1 = (value) => value !== null && typeof value === "object";
var validateAndMerge = (...sources) => {
  for (const source of sources) {
    if ((!isObject$1(source) || Array.isArray(source)) && source !== void 0) {
      throw new TypeError("The `options` argument must be an object");
    }
  }
  return deepMerge({}, ...sources);
};
var mergeHeaders = (source1 = {}, source2 = {}) => {
  const result = new globalThis.Headers(source1);
  const isHeadersInstance = source2 instanceof globalThis.Headers;
  const source = new globalThis.Headers(source2);
  for (const [key, value] of source.entries()) {
    if (isHeadersInstance && value === "undefined" || value === void 0) {
      result.delete(key);
    } else {
      result.set(key, value);
    }
  }
  return result;
};
var deepMerge = (...sources) => {
  let returnValue = {};
  let headers = {};
  for (const source of sources) {
    if (Array.isArray(source)) {
      if (!Array.isArray(returnValue)) {
        returnValue = [];
      }
      returnValue = [...returnValue, ...source];
    } else if (isObject$1(source)) {
      for (let [key, value] of Object.entries(source)) {
        if (isObject$1(value) && key in returnValue) {
          value = deepMerge(returnValue[key], value);
        }
        returnValue = { ...returnValue, [key]: value };
      }
      if (isObject$1(source.headers)) {
        headers = mergeHeaders(headers, source.headers);
        returnValue.headers = headers;
      }
    }
  }
  return returnValue;
};
var supportsRequestStreams = (() => {
  let duplexAccessed = false;
  let hasContentType = false;
  const supportsReadableStream = typeof globalThis.ReadableStream === "function";
  const supportsRequest = typeof globalThis.Request === "function";
  if (supportsReadableStream && supportsRequest) {
    hasContentType = new globalThis.Request("https://empty.invalid", {
      body: new globalThis.ReadableStream(),
      method: "POST",
      // @ts-expect-error - Types are outdated.
      get duplex() {
        duplexAccessed = true;
        return "half";
      }
    }).headers.has("Content-Type");
  }
  return duplexAccessed && !hasContentType;
})();
var supportsAbortController = typeof globalThis.AbortController === "function";
var supportsResponseStreams = typeof globalThis.ReadableStream === "function";
var supportsFormData = typeof globalThis.FormData === "function";
var requestMethods = ["get", "post", "put", "patch", "head", "delete"];
var responseTypes = {
  json: "application/json",
  text: "text/*",
  formData: "multipart/form-data",
  arrayBuffer: "*/*",
  blob: "*/*"
};
var maxSafeTimeout = 2147483647;
var stop = Symbol("stop");
var kyOptionKeys = {
  json: true,
  parseJson: true,
  searchParams: true,
  prefixUrl: true,
  retry: true,
  timeout: true,
  hooks: true,
  throwHttpErrors: true,
  onDownloadProgress: true,
  fetch: true
};
var requestOptionsRegistry = {
  method: true,
  headers: true,
  body: true,
  mode: true,
  credentials: true,
  cache: true,
  redirect: true,
  referrer: true,
  referrerPolicy: true,
  integrity: true,
  keepalive: true,
  signal: true,
  window: true,
  dispatcher: true,
  duplex: true,
  priority: true
};
var normalizeRequestMethod = (input) => requestMethods.includes(input) ? input.toUpperCase() : input;
var retryMethods = ["get", "put", "head", "delete", "options", "trace"];
var retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];
var retryAfterStatusCodes = [413, 429, 503];
var defaultRetryOptions = {
  limit: 2,
  methods: retryMethods,
  statusCodes: retryStatusCodes,
  afterStatusCodes: retryAfterStatusCodes,
  maxRetryAfter: Number.POSITIVE_INFINITY,
  backoffLimit: Number.POSITIVE_INFINITY,
  delay: (attemptCount) => 0.3 * 2 ** (attemptCount - 1) * 1e3
};
var normalizeRetryOptions = (retry = {}) => {
  if (typeof retry === "number") {
    return {
      ...defaultRetryOptions,
      limit: retry
    };
  }
  if (retry.methods && !Array.isArray(retry.methods)) {
    throw new Error("retry.methods must be an array");
  }
  if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {
    throw new Error("retry.statusCodes must be an array");
  }
  return {
    ...defaultRetryOptions,
    ...retry,
    afterStatusCodes: retryAfterStatusCodes
  };
};
async function timeout(request, init, abortController, options) {
  return new Promise((resolve, reject) => {
    const timeoutId = setTimeout(() => {
      if (abortController) {
        abortController.abort();
      }
      reject(new TimeoutError(request));
    }, options.timeout);
    void options.fetch(request, init).then(resolve).catch(reject).then(() => {
      clearTimeout(timeoutId);
    });
  });
}
async function delay(ms, { signal }) {
  return new Promise((resolve, reject) => {
    if (signal) {
      signal.throwIfAborted();
      signal.addEventListener("abort", abortHandler, { once: true });
    }
    function abortHandler() {
      clearTimeout(timeoutId);
      reject(signal.reason);
    }
    const timeoutId = setTimeout(() => {
      signal == null ? void 0 : signal.removeEventListener("abort", abortHandler);
      resolve();
    }, ms);
  });
}
var findUnknownOptions = (request, options) => {
  const unknownOptions = {};
  for (const key in options) {
    if (!(key in requestOptionsRegistry) && !(key in kyOptionKeys) && !(key in request)) {
      unknownOptions[key] = options[key];
    }
  }
  return unknownOptions;
};
var Ky = class _Ky {
  static create(input, options) {
    const ky2 = new _Ky(input, options);
    const function_ = async () => {
      if (typeof ky2._options.timeout === "number" && ky2._options.timeout > maxSafeTimeout) {
        throw new RangeError(`The \`timeout\` option cannot be greater than ${maxSafeTimeout}`);
      }
      await Promise.resolve();
      let response = await ky2._fetch();
      for (const hook of ky2._options.hooks.afterResponse) {
        const modifiedResponse = await hook(ky2.request, ky2._options, ky2._decorateResponse(response.clone()));
        if (modifiedResponse instanceof globalThis.Response) {
          response = modifiedResponse;
        }
      }
      ky2._decorateResponse(response);
      if (!response.ok && ky2._options.throwHttpErrors) {
        let error = new HTTPError(response, ky2.request, ky2._options);
        for (const hook of ky2._options.hooks.beforeError) {
          error = await hook(error);
        }
        throw error;
      }
      if (ky2._options.onDownloadProgress) {
        if (typeof ky2._options.onDownloadProgress !== "function") {
          throw new TypeError("The `onDownloadProgress` option must be a function");
        }
        if (!supportsResponseStreams) {
          throw new Error("Streams are not supported in your environment. `ReadableStream` is missing.");
        }
        return ky2._stream(response.clone(), ky2._options.onDownloadProgress);
      }
      return response;
    };
    const isRetriableMethod = ky2._options.retry.methods.includes(ky2.request.method.toLowerCase());
    const result = isRetriableMethod ? ky2._retry(function_) : function_();
    for (const [type, mimeType] of Object.entries(responseTypes)) {
      result[type] = async () => {
        ky2.request.headers.set("accept", ky2.request.headers.get("accept") || mimeType);
        const awaitedResult = await result;
        const response = awaitedResult.clone();
        if (type === "json") {
          if (response.status === 204) {
            return "";
          }
          const arrayBuffer2 = await response.clone().arrayBuffer();
          const responseSize = arrayBuffer2.byteLength;
          if (responseSize === 0) {
            return "";
          }
          if (options.parseJson) {
            return options.parseJson(await response.text());
          }
        }
        return response[type]();
      };
    }
    return result;
  }
  // eslint-disable-next-line complexity
  constructor(input, options = {}) {
    Object.defineProperty(this, "request", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "abortController", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "_retryCount", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: 0
    });
    Object.defineProperty(this, "_input", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "_options", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    this._input = input;
    const credentials = this._input instanceof Request && "credentials" in Request.prototype ? this._input.credentials : void 0;
    this._options = {
      ...credentials && { credentials },
      // For exactOptionalPropertyTypes
      ...options,
      headers: mergeHeaders(this._input.headers, options.headers),
      hooks: deepMerge({
        beforeRequest: [],
        beforeRetry: [],
        beforeError: [],
        afterResponse: []
      }, options.hooks),
      method: normalizeRequestMethod(options.method ?? this._input.method),
      // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
      prefixUrl: String(options.prefixUrl || ""),
      retry: normalizeRetryOptions(options.retry),
      throwHttpErrors: options.throwHttpErrors !== false,
      timeout: options.timeout ?? 1e4,
      fetch: options.fetch ?? globalThis.fetch.bind(globalThis)
    };
    if (typeof this._input !== "string" && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {
      throw new TypeError("`input` must be a string, URL, or Request");
    }
    if (this._options.prefixUrl && typeof this._input === "string") {
      if (this._input.startsWith("/")) {
        throw new Error("`input` must not begin with a slash when using `prefixUrl`");
      }
      if (!this._options.prefixUrl.endsWith("/")) {
        this._options.prefixUrl += "/";
      }
      this._input = this._options.prefixUrl + this._input;
    }
    if (supportsAbortController) {
      this.abortController = new globalThis.AbortController();
      if (this._options.signal) {
        const originalSignal = this._options.signal;
        this._options.signal.addEventListener("abort", () => {
          this.abortController.abort(originalSignal.reason);
        });
      }
      this._options.signal = this.abortController.signal;
    }
    if (supportsRequestStreams) {
      this._options.duplex = "half";
    }
    this.request = new globalThis.Request(this._input, this._options);
    if (this._options.searchParams) {
      const textSearchParams = typeof this._options.searchParams === "string" ? this._options.searchParams.replace(/^\?/, "") : new URLSearchParams(this._options.searchParams).toString();
      const searchParams = "?" + textSearchParams;
      const url = this.request.url.replace(/(?:\?.*?)?(?=#|$)/, searchParams);
      if ((supportsFormData && this._options.body instanceof globalThis.FormData || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers["content-type"])) {
        this.request.headers.delete("content-type");
      }
      this.request = new globalThis.Request(new globalThis.Request(url, { ...this.request }), this._options);
    }
    if (this._options.json !== void 0) {
      this._options.body = JSON.stringify(this._options.json);
      this.request.headers.set("content-type", this._options.headers.get("content-type") ?? "application/json");
      this.request = new globalThis.Request(this.request, { body: this._options.body });
    }
  }
  _calculateRetryDelay(error) {
    this._retryCount++;
    if (this._retryCount <= this._options.retry.limit && !(error instanceof TimeoutError)) {
      if (error instanceof HTTPError) {
        if (!this._options.retry.statusCodes.includes(error.response.status)) {
          return 0;
        }
        const retryAfter = error.response.headers.get("Retry-After");
        if (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {
          let after = Number(retryAfter);
          if (Number.isNaN(after)) {
            after = Date.parse(retryAfter) - Date.now();
          } else {
            after *= 1e3;
          }
          if (this._options.retry.maxRetryAfter !== void 0 && after > this._options.retry.maxRetryAfter) {
            return 0;
          }
          return after;
        }
        if (error.response.status === 413) {
          return 0;
        }
      }
      const retryDelay = this._options.retry.delay(this._retryCount);
      return Math.min(this._options.retry.backoffLimit, retryDelay);
    }
    return 0;
  }
  _decorateResponse(response) {
    if (this._options.parseJson) {
      response.json = async () => this._options.parseJson(await response.text());
    }
    return response;
  }
  async _retry(function_) {
    try {
      return await function_();
    } catch (error) {
      const ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);
      if (ms !== 0 && this._retryCount > 0) {
        await delay(ms, { signal: this._options.signal });
        for (const hook of this._options.hooks.beforeRetry) {
          const hookResult = await hook({
            request: this.request,
            options: this._options,
            error,
            retryCount: this._retryCount
          });
          if (hookResult === stop) {
            return;
          }
        }
        return this._retry(function_);
      }
      throw error;
    }
  }
  async _fetch() {
    for (const hook of this._options.hooks.beforeRequest) {
      const result = await hook(this.request, this._options);
      if (result instanceof Request) {
        this.request = result;
        break;
      }
      if (result instanceof Response) {
        return result;
      }
    }
    const nonRequestOptions = findUnknownOptions(this.request, this._options);
    if (this._options.timeout === false) {
      return this._options.fetch(this.request.clone(), nonRequestOptions);
    }
    return timeout(this.request.clone(), nonRequestOptions, this.abortController, this._options);
  }
  /* istanbul ignore next */
  _stream(response, onDownloadProgress) {
    const totalBytes = Number(response.headers.get("content-length")) || 0;
    let transferredBytes = 0;
    if (response.status === 204) {
      if (onDownloadProgress) {
        onDownloadProgress({ percent: 1, totalBytes, transferredBytes }, new Uint8Array());
      }
      return new globalThis.Response(null, {
        status: response.status,
        statusText: response.statusText,
        headers: response.headers
      });
    }
    return new globalThis.Response(new globalThis.ReadableStream({
      async start(controller) {
        const reader = response.body.getReader();
        if (onDownloadProgress) {
          onDownloadProgress({ percent: 0, transferredBytes: 0, totalBytes }, new Uint8Array());
        }
        async function read() {
          const { done, value } = await reader.read();
          if (done) {
            controller.close();
            return;
          }
          if (onDownloadProgress) {
            transferredBytes += value.byteLength;
            const percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;
            onDownloadProgress({ percent, transferredBytes, totalBytes }, value);
          }
          controller.enqueue(value);
          await read();
        }
        await read();
      }
    }), {
      status: response.status,
      statusText: response.statusText,
      headers: response.headers
    });
  }
};
var createInstance = (defaults) => {
  const ky2 = (input, options) => Ky.create(input, validateAndMerge(defaults, options));
  for (const method of requestMethods) {
    ky2[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, { method }));
  }
  ky2.create = (newDefaults) => createInstance(validateAndMerge(newDefaults));
  ky2.extend = (newDefaults) => createInstance(validateAndMerge(defaults, newDefaults));
  ky2.stop = stop;
  return ky2;
};
var ky$1 = createInstance();
var distribution = Object.freeze({
  __proto__: null,
  HTTPError,
  TimeoutError,
  default: ky$1
});
var require$$2 = getAugmentedNamespace(distribution);
var ENDPOINT = {
  FREE: "https://api.microlink.io/",
  PRO: "https://pro.microlink.io/"
};
var isObject = (input) => input !== null && typeof input === "object";
var isBuffer = (input) => input != null && input.constructor != null && typeof input.constructor.isBuffer === "function" && input.constructor.isBuffer(input);
var parseBody = (input, error, url) => {
  try {
    return JSON.parse(input);
  } catch (_2) {
    const message = input || error.message;
    return {
      status: "error",
      data: { url: message },
      more: "https://microlink.io/efatalclient",
      code: "EFATALCLIENT",
      message,
      url
    };
  }
};
var factory$1 = (streamResponseType) => ({
  VERSION,
  MicrolinkError: MicrolinkError2,
  urlHttp: urlHttp2,
  got: got2,
  flatten: flatten2
}) => {
  const assertUrl = (url = "") => {
    if (!urlHttp2(url)) {
      const message = `The \`url\` as \`${url}\` is not valid. Ensure it has protocol (http or https) and hostname.`;
      throw new MicrolinkError2({
        status: "fail",
        data: { url: message },
        more: "https://microlink.io/einvalurlclient",
        code: "EINVALURLCLIENT",
        message,
        url
      });
    }
  };
  const mapRules2 = (rules) => {
    if (!isObject(rules)) return;
    const flatRules = flatten2(rules);
    return Object.keys(flatRules).reduce((acc, key) => {
      acc[`data.${key}`] = flatRules[key].toString();
      return acc;
    }, {});
  };
  const fetchFromApi2 = async (apiUrl, opts = {}) => {
    try {
      const response = await got2(apiUrl, opts);
      return opts.responseType === streamResponseType ? response : { ...response.body, response };
    } catch (error) {
      const { response = {} } = error;
      const {
        statusCode,
        body: rawBody,
        headers = {},
        url: uri = apiUrl
      } = response;
      const isBodyBuffer = isBuffer(rawBody);
      const body = isObject(rawBody) && !isBodyBuffer ? rawBody : parseBody(isBodyBuffer ? rawBody.toString() : rawBody, error, uri);
      throw new MicrolinkError2({
        ...body,
        message: body.message,
        url: uri,
        statusCode,
        headers
      });
    }
  };
  const getApiUrl3 = (url, { data, apiKey, endpoint, retry, cache, ...opts } = {}, { responseType = "json", headers: gotHeaders, ...gotOpts } = {}) => {
    const isPro = !!apiKey;
    const apiEndpoint = endpoint || ENDPOINT[isPro ? "PRO" : "FREE"];
    const apiUrl = `${apiEndpoint}?${new URLSearchParams({
      url,
      ...mapRules2(data),
      ...flatten2(opts)
    }).toString()}`;
    const headers = isPro ? { ...gotHeaders, "x-api-key": apiKey } : { ...gotHeaders };
    if (opts.stream) {
      responseType = streamResponseType;
    }
    return [apiUrl, { ...gotOpts, responseType, cache, retry, headers }];
  };
  const createMql = (defaultOpts) => async (url, opts, gotOpts) => {
    assertUrl(url);
    const [apiUrl, fetchOpts] = getApiUrl3(url, opts, {
      ...defaultOpts,
      ...gotOpts
    });
    return fetchFromApi2(apiUrl, fetchOpts);
  };
  const mql2 = createMql();
  mql2.extend = createMql;
  mql2.MicrolinkError = MicrolinkError2;
  mql2.getApiUrl = getApiUrl3;
  mql2.fetchFromApi = fetchFromApi2;
  mql2.mapRules = mapRules2;
  mql2.version = VERSION;
  mql2.stream = got2.stream;
  return mql2;
};
var factory_1 = factory$1;
var urlHttp = lightweight$1;
var { flattie: flatten } = dist;
var { default: ky } = require$$2;
var factory = factory_1("arrayBuffer");
var MicrolinkError = class extends Error {
  constructor(props) {
    super();
    this.name = "MicrolinkError";
    Object.assign(this, props);
    this.description = this.message;
    this.message = this.code ? `${this.code}, ${this.description}` : this.description;
  }
};
var got = async (url, { responseType, ...opts }) => {
  try {
    if (opts.timeout === void 0) opts.timeout = false;
    const response = await ky(url, opts);
    const body = await response[responseType]();
    const { headers, status: statusCode } = response;
    return { url: response.url, body, headers, statusCode };
  } catch (error) {
    if (error.response) {
      const { response } = error;
      error.response = {
        ...response,
        headers: Array.from(response.headers.entries()).reduce(
          (acc, [key, value]) => {
            acc[key] = value;
            return acc;
          },
          {}
        ),
        statusCode: response.status,
        body: await response.text()
      };
    }
    throw error;
  }
};
got.stream = (...args) => ky(...args).then((res) => res.body);
var mql = factory({
  MicrolinkError,
  urlHttp,
  got,
  flatten,
  VERSION: "0.13.6"
});
lightweight$2.exports = mql;
var arrayBuffer = lightweight$2.exports.arrayBuffer = mql.extend({ responseType: "arrayBuffer" });
var extend = lightweight$2.exports.extend = mql.extend;
var fetchFromApi = lightweight$2.exports.fetchFromApi = mql.fetchFromApi;
var getApiUrl = lightweight$2.exports.getApiUrl = mql.getApiUrl;
var mapRules = lightweight$2.exports.mapRules = mql.mapRules;
var MicrolinkError_1 = lightweight$2.exports.MicrolinkError = mql.MicrolinkError;
var version = lightweight$2.exports.version = mql.version;
var lightweightExports = lightweight$2.exports;
var lightweight = getDefaultExportFromCjs(lightweightExports);

// node_modules/@microlink/react/dist/microlink.mjs
var _excluded$8 = ["accessibility", "debounce", "ellipsis", "is", "lines", "text"];
function ownKeys$4(e, r2) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e, r3).enumerable;
    })), t.push.apply(t, o2);
  }
  return t;
}
function _objectSpread$4(e) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$4(Object(t), true).forEach(function(r3) {
      _defineProperty(e, r3, t[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$4(Object(t)).forEach(function(r3) {
      Object.defineProperty(e, r3, Object.getOwnPropertyDescriptor(t, r3));
    });
  }
  return e;
}
var l2 = (_ref) => {
  let {
    accessibility: l3 = true,
    debounce: o2 = 300,
    ellipsis: u2 = "…",
    is: c2 = "div",
    lines: s2 = 3,
    text: d
  } = _ref, v2 = _objectWithoutProperties(_ref, _excluded$8);
  const a2 = (0, import_react2.useRef)(null), f2 = (0, import_react2.useRef)("."), h = _objectSpread$4(_objectSpread$4({
    ref: a2
  }, l3 ? {
    title: d
  } : {}), v2), g2 = (0, import_react2.useMemo)(() => "string" == typeof d && d.length > 0, [d]), m2 = (0, import_react2.useCallback)(() => {
    var e, t, n, r2;
    if (!g2) return;
    const i2 = (e2) => {
      f2.current = e2, null != a2.current && (a2.current.innerText = e2);
    };
    i2(".");
    const l4 = ((null !== (t = null === (e = a2.current) || void 0 === e ? void 0 : e.clientHeight) && void 0 !== t ? t : 0) + 1) * s2 + 1, o3 = "…" === u2 ? 5 : 1.2 * u2.length;
    let c3 = 0, v3 = 0, h2 = d.length;
    for (; c3 <= h2; ) {
      v3 = Math.floor((c3 + h2) / 2);
      if (i2(d.slice(0, v3)), v3 === d.length) return;
      (null !== (r2 = null === (n = a2.current) || void 0 === n ? void 0 : n.clientHeight) && void 0 !== r2 ? r2 : 0) <= l4 ? c3 = v3 + 1 : h2 = v3 - 1;
    }
    i2(d.slice(0, Math.max(v3 - o3, 0)).trim() + u2);
  }, [u2, g2, s2, d]);
  return (0, import_react2.useEffect)(() => {
    m2();
    const e = /* @__PURE__ */ ((e2, t) => {
      let n;
      const r2 = () => {
        n = void 0, e2();
      };
      return () => {
        const i2 = null == n;
        clearTimeout(n), n = setTimeout(r2, t), i2 && e2();
      };
    })(m2, o2);
    return window.addEventListener("resize", e), () => window.removeEventListener("resize", e);
  }, [m2, o2]), g2 ? (0, import_react2.createElement)(c2, h, f2.current) : null;
};
function getDefaultExportFromCjs2(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
var src = () => /^https?:\/\/(localhost|0|10|127|192(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\[::1?\])/gi;
var localhostUrl = getDefaultExportFromCjs2(src);
var _templateObject$i;
var _templateObject2$e;
var isSSR = typeof window === "undefined";
var castArray = (value) => [].concat(value);
var getPreferredMedia = (data, mediaProps) => {
  let prefer;
  for (let index = 0; index < mediaProps.length; index++) {
    const key = mediaProps[index];
    const value = data[key];
    if (!isNil(value)) {
      prefer = key;
      break;
    }
  }
  return prefer;
};
var isFunction = (fn) => typeof fn === "function";
var isObject2 = (obj) => typeof obj === "object";
var isNil = (value) => value == null;
var getUrlPath = (data) => isObject2(data) ? data.url : data;
var someProp = (data, props) => data[props.find((prop) => !isNil(data[prop]))];
var media = {
  mobile: function() {
    return lt(_templateObject$i || (_templateObject$i = _taggedTemplateLiteral(["\n    @media (max-width: 48em) {\n      ", ";\n    }\n  "])), lt(...arguments));
  },
  desktop: function() {
    return lt(_templateObject2$e || (_templateObject2$e = _taggedTemplateLiteral(["\n    @media (min-width: 48em) {\n      ", ";\n    }\n  "])), lt(...arguments));
  }
};
var getApiUrl2 = (_ref) => {
  let {
    apiKey,
    contrast = false,
    data,
    endpoint,
    force,
    headers,
    media: media2,
    prerender,
    proxy,
    ttl,
    url
  } = _ref;
  return getApiUrl(url, {
    apiKey,
    audio: media2.includes("audio"),
    data,
    endpoint,
    force,
    headers,
    iframe: media2.includes("iframe"),
    palette: contrast,
    prerender,
    proxy,
    screenshot: media2.includes("screenshot"),
    ttl,
    video: media2.includes("video")
  });
};
var isLarge = (cardSize) => cardSize === "large";
var isSmall = (cardSize) => cardSize === "small";
var imageProxy = (url) => localhostUrl().test(url) ? url : "https://images.weserv.nl/?".concat(new URLSearchParams({
  url,
  default: url,
  l: 9,
  af: "",
  il: "",
  n: -1
}).toString());
var isLazySupported = !isSSR && "IntersectionObserver" in window;
var formatSeconds = (secs) => {
  const secsToNum = parseInt(secs, 10);
  const hours = Math.floor(secsToNum / 3600);
  const minutes = Math.floor(secsToNum / 60) % 60;
  const seconds = secsToNum % 60;
  return [hours, minutes, seconds].filter((v2, i2) => v2 > 0 || i2 > 0).map((v2) => v2 >= 10 ? v2 : "0".concat(v2)).join(":");
};
var clampNumber = (num, min, max) => {
  switch (true) {
    case num <= min:
      return min;
    case num >= max:
      return max;
    default:
      return num;
  }
};
var BASE_CLASSNAME = "microlink_card";
var CONTENT_BASE_CLASSNAME = "".concat(BASE_CLASSNAME, "__content");
var MEDIA_BASE_CLASSNAME = "".concat(BASE_CLASSNAME, "__media");
var CONTROLS_BASE_CLASSNAME = "".concat(MEDIA_BASE_CLASSNAME, "__controls");
var classNames = {
  main: BASE_CLASSNAME,
  content: CONTENT_BASE_CLASSNAME,
  title: "".concat(CONTENT_BASE_CLASSNAME, "_title"),
  description: "".concat(CONTENT_BASE_CLASSNAME, "_description"),
  url: "".concat(CONTENT_BASE_CLASSNAME, "_url"),
  mediaWrapper: "".concat(MEDIA_BASE_CLASSNAME, "_wrapper"),
  media: MEDIA_BASE_CLASSNAME,
  image: "".concat(MEDIA_BASE_CLASSNAME, "_image"),
  videoWrapper: "".concat(MEDIA_BASE_CLASSNAME, "_video_wrapper"),
  video: "".concat(MEDIA_BASE_CLASSNAME, "_video"),
  audioWrapper: "".concat(MEDIA_BASE_CLASSNAME, "_audio_wrapper"),
  audio: "".concat(MEDIA_BASE_CLASSNAME, "_audio"),
  mediaControls: CONTROLS_BASE_CLASSNAME,
  playbackControl: "".concat(CONTROLS_BASE_CLASSNAME, "_playback"),
  volumeControl: "".concat(CONTROLS_BASE_CLASSNAME, "_volume"),
  rwControl: "".concat(CONTROLS_BASE_CLASSNAME, "_rewind"),
  ffwControl: "".concat(CONTROLS_BASE_CLASSNAME, "_fast_forward"),
  rateControl: "".concat(CONTROLS_BASE_CLASSNAME, "_rate"),
  progressBar: "".concat(CONTROLS_BASE_CLASSNAME, "_progress_bar"),
  progressTime: "".concat(CONTROLS_BASE_CLASSNAME, "_progress_time"),
  spinner: "".concat(CONTROLS_BASE_CLASSNAME, "_spinner"),
  iframe: "".concat(BASE_CLASSNAME, "__iframe")
};
var _excluded$7 = ["useNanoClamp", "children"];
var _templateObject$h;
var _templateObject2$d;
function ownKeys$3(e, r2) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e, r3).enumerable;
    })), t.push.apply(t, o2);
  }
  return t;
}
function _objectSpread$3(e) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$3(Object(t), true).forEach(function(r3) {
      _defineProperty(e, r3, t[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$3(Object(t)).forEach(function(r3) {
      Object.defineProperty(e, r3, Object.getOwnPropertyDescriptor(t, r3));
    });
  }
  return e;
}
var Clamp = (_ref) => {
  let {
    children,
    className,
    lines
  } = _ref;
  return isNil(children) ? null : import_react2.default.createElement(l2, {
    className,
    lines,
    text: children,
    is: "p"
  });
};
var StyledClamp = dt(Clamp)(_templateObject$h || (_templateObject$h = _taggedTemplateLiteral(["\n  &&& {\n    text-align: inherit;\n    font-weight: inherit;\n    font-family: inherit;\n    color: inherit;\n    margin: 0;\n\n    ", "\n  }\n"])), (_ref2) => {
  let {
    $useNanoClamp
  } = _ref2;
  return !$useNanoClamp && lt(_templateObject2$d || (_templateObject2$d = _taggedTemplateLiteral(["\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n      "])));
});
var CardText = (_ref3) => {
  let {
    useNanoClamp = true,
    children
  } = _ref3, props = _objectWithoutProperties(_ref3, _excluded$7);
  const textProps = useNanoClamp ? props : _objectSpread$3(_objectSpread$3({}, props), {}, {
    as: "p",
    title: children
  });
  return import_react2.default.createElement(StyledClamp, _extends({
    $useNanoClamp: useNanoClamp
  }, textProps), children);
};
var speed = {
  short: "100ms",
  medium: "150ms",
  long: "300ms"
};
var animation = {
  short: "cubic-bezier(.25,.8,.25,1)",
  medium: "cubic-bezier(.25,.8,.25,1)",
  long: "cubic-bezier(.4, 0, .2, 1)"
};
var createTransition = (properties, s2) => {
  const suffix = "".concat(speed[s2], " ").concat(animation[s2]);
  return properties.map((property) => "".concat(property, " ").concat(suffix)).join(", ");
};
var transition = {
  short: function() {
    for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
      properties[_key] = arguments[_key];
    }
    return createTransition(properties, "short");
  },
  medium: function() {
    for (var _len2 = arguments.length, properties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      properties[_key2] = arguments[_key2];
    }
    return createTransition(properties, "medium");
  },
  long: function() {
    for (var _len3 = arguments.length, properties = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      properties[_key3] = arguments[_key3];
    }
    return createTransition(properties, "long");
  }
};
var font = {
  sans: "InterUI, -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif",
  mono: "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace"
};
var _excluded$6 = ["autoPlay", "children", "controls", "loop", "mediaRef", "muted", "playsInline", "size"];
function ownKeys$2(e, r2) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e, r3).enumerable;
    })), t.push.apply(t, o2);
  }
  return t;
}
function _objectSpread$2(e) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$2(Object(t), true).forEach(function(r3) {
      _defineProperty(e, r3, t[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$2(Object(t)).forEach(function(r3) {
      Object.defineProperty(e, r3, Object.getOwnPropertyDescriptor(t, r3));
    });
  }
  return e;
}
var initialState = {};
var GlobalContext = import_react2.default.createContext(initialState);
var GlobalState = (_ref) => {
  let {
    autoPlay,
    children,
    controls,
    loop,
    mediaRef,
    muted,
    playsInline,
    size
  } = _ref, rest = _objectWithoutProperties(_ref, _excluded$6);
  const [state, setState] = (0, import_react2.useState)(initialState);
  const updateState = (0, import_react2.useCallback)((newState) => setState((currentState) => _objectSpread$2(_objectSpread$2({}, currentState), newState)), []);
  const props = (0, import_react2.useMemo)(() => ({
    autoPlay,
    controls,
    loop,
    mediaRef,
    muted,
    playsInline,
    size
  }), [autoPlay, controls, loop, mediaRef, muted, playsInline, size]);
  const values = (0, import_react2.useMemo)(() => ({
    props,
    state,
    updateState
  }), [props, state, updateState]);
  return import_react2.default.createElement(GlobalContext.Provider, {
    value: values
  }, children(rest));
};
var _templateObject$g;
var _templateObject2$c;
var _templateObject3$b;
var _templateObject4$9;
var _templateObject5$6;
var _templateObject6$2;
var _templateObject7$2;
var _templateObject8;
var _templateObject9;
var _templateObject10;
var _templateObject11;
var _templateObject12;
var REGEX_STRIP_WWW = /^www\./;
var BADGE_WIDTH = "16px";
var BADGE_HEIGHT = "12px";
var getHostname = (href) => {
  if (isNil(href)) return "";
  const {
    hostname
  } = new URL(href);
  return hostname.replace(REGEX_STRIP_WWW, "");
};
var mobileDescriptionStyle = lt(_templateObject$g || (_templateObject$g = _taggedTemplateLiteral(["\n  ", ";\n"])), media.mobile(_templateObject2$c || (_templateObject2$c = _taggedTemplateLiteral(["\n    > p {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  "]))));
var Content = dt("div").attrs({
  className: classNames.content
})(_templateObject3$b || (_templateObject3$b = _taggedTemplateLiteral(["\n  display: flex;\n  padding: 10px 15px;\n  min-width: 0;\n  box-sizing: border-box;\n  ", ";\n"])), (_ref) => {
  let {
    $cardSize
  } = _ref;
  return lt(_templateObject4$9 || (_templateObject4$9 = _taggedTemplateLiteral(["\n    flex: ", ";\n    justify-content: ", ";\n    flex-direction: ", ";\n    align-items: ", ";\n  "])), !isLarge($cardSize) ? 1 : "0 0 125px", !isSmall($cardSize) ? "space-around" : "space-between", !isSmall($cardSize) ? "column" : "row", !isSmall($cardSize) ? "stretch" : "center");
});
var Header = dt("header").attrs({
  className: classNames.title
})(_templateObject5$6 || (_templateObject5$6 = _taggedTemplateLiteral(["\n  text-align: left;\n  font-weight: bold;\n  margin: 0;\n  width: 100%;\n  ", "\n"])), (_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return lt(_templateObject6$2 || (_templateObject6$2 = _taggedTemplateLiteral(["\n    flex-grow: ", ";\n    font-size: ", ";\n\n    ", "\n  "])), !isSmall($cardSize) ? 1.2 : 0.8, !isSmall($cardSize) ? "16px" : "15px", isSmall($cardSize) && lt(_templateObject7$2 || (_templateObject7$2 = _taggedTemplateLiteral(["\n      min-width: 0;\n      padding-right: 14px;\n    "]))));
});
var Description = dt("div").attrs({
  className: classNames.description
})(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n  text-align: left;\n  font-size: 14px;\n  flex-grow: 2;\n  margin: auto 0;\n  line-height: 18px;\n  font-weight: normal;\n  ", ";\n"])), (_ref3) => {
  let {
    $cardSize
  } = _ref3;
  return !isLarge($cardSize) && mobileDescriptionStyle;
});
var Footer = dt("footer").attrs({
  className: classNames.url
})(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-align: left;\n  margin: 0;\n  flex-grow: 0;\n  font-weight: normal;\n  ", ";\n"])), (_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return lt(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n    font-size: ", ";\n    ", "\n  "])), !isSmall($cardSize) ? "12px" : "10px", !isSmall($cardSize) && "width: 100%;");
});
var Author = dt(CardText)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n  opacity: 0.75;\n  transition: ", ";\n  will-change: opacity;\n\n  .", ":hover & {\n    opacity: 1;\n  }\n"])), transition.medium("opacity"), classNames.main);
var PoweredBy = dt("span").attrs({
  title: "microlink.io"
})(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n  background: url('https://cdn.microlink.io/logo/logo.svg') no-repeat center\n    center;\n  display: block;\n  margin-left: 15px;\n  transition: ", ";\n  will-change: filter, opacity;\n  &:not(:hover) {\n    filter: grayscale(100%);\n    opacity: 0.75;\n  }\n\n  min-width: ", ";\n  width: ", ";\n  background-size: ", ";\n  height: ", ";\n"])), transition.medium("filter", "opacity"), BADGE_WIDTH, BADGE_WIDTH, BADGE_WIDTH, BADGE_HEIGHT);
var CardContent = () => {
  const {
    state: {
      description,
      title,
      url
    },
    props: {
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const isSmallCard = isSmall(size);
  const formattedUrl = (0, import_react2.useMemo)(() => getHostname(url), [url]);
  const handleOnClick = (0, import_react2.useCallback)((e) => {
    e.preventDefault();
    window.open("https://www.microlink.io", "_blank");
  }, []);
  return import_react2.default.createElement(Content, {
    $cardSize: size
  }, import_react2.default.createElement(Header, {
    $cardSize: size
  }, import_react2.default.createElement(CardText, {
    $useNanoClamp: false
  }, title)), !isSmallCard && import_react2.default.createElement(Description, {
    $cardSize: size
  }, import_react2.default.createElement(CardText, {
    lines: 2
  }, description)), import_react2.default.createElement(Footer, {
    $cardSize: size
  }, import_react2.default.createElement(Author, {
    $useNanoClamp: false
  }, formattedUrl), import_react2.default.createElement(PoweredBy, {
    onClick: handleOnClick
  })));
};
var _templateObject$f;
var _templateObject2$b;
var _templateObject3$a;
var _templateObject4$8;
var emptyStatePulse = mt(_templateObject$f || (_templateObject$f = _taggedTemplateLiteral(["\n  0% {\n    background: #e1e8ed;\n  }\n  70% {\n    background: #cdd4d8;\n  }\n  100% {\n    background: #e1e8ed;\n  }\n"])));
var emptyStateImagePulse = mt(_templateObject2$b || (_templateObject2$b = _taggedTemplateLiteral(["\n  0% {\n    background: #e1e8ed;\n  }\n  70% {\n    background: #dce3e8;\n  }\n  100% {\n    background: #e1e8ed;\n  }\n"])));
var emptyStateAnimation = lt(_templateObject3$a || (_templateObject3$a = _taggedTemplateLiteral(["\n  animation: ", " .75s linear infinite;\n"])), emptyStatePulse);
var emptyStateImageAnimation = lt(_templateObject4$8 || (_templateObject4$8 = _taggedTemplateLiteral(["\n  animation: ", " 1.25s linear infinite;\n"])), emptyStateImagePulse);
var _templateObject$e;
var _templateObject2$a;
var _templateObject3$9;
var ImageLoadCatcher = dt("img")(_templateObject$e || (_templateObject$e = _taggedTemplateLiteral(["\n  height: 1px;\n  width: 1px;\n  position: absolute;\n  z-index: -1;\n"])));
var loadingOverlay = lt(_templateObject2$a || (_templateObject2$a = _taggedTemplateLiteral(["\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    background: #e1e8ed;\n    z-index: 1;\n    transition: ", ";\n    will-change: opacity;\n\n    ", ";\n  }\n"])), transition.medium("opacity", "visibility"), (_ref) => {
  let {
    $isLoading
  } = _ref;
  return lt(_templateObject3$9 || (_templateObject3$9 = _taggedTemplateLiteral(["\n      opacity: ", ";\n      visibility: ", ";\n    "])), $isLoading ? 1 : 0, $isLoading ? "$visible" : "hidden");
});
var _templateObject$d;
var _templateObject2$9;
var _templateObject3$8;
var _templateObject4$7;
var _templateObject5$5;
var mediaSizeStyles = {
  small: lt(_templateObject$d || (_templateObject$d = _taggedTemplateLiteral(["\n    flex: 0 0 48px;\n  "]))),
  normal: lt(_templateObject2$9 || (_templateObject2$9 = _taggedTemplateLiteral(["\n    flex: 0 0 125px;\n\n    ", "\n  "])), media.mobile(_templateObject3$8 || (_templateObject3$8 = _taggedTemplateLiteral(["\n      flex: 0 0 92px;\n    "])))),
  large: lt(_templateObject4$7 || (_templateObject4$7 = _taggedTemplateLiteral(["\n    flex: 1;\n\n    &::before {\n      padding-bottom: 0;\n    }\n  "])))
};
var StyledWrap = dt("div")(_templateObject5$5 || (_templateObject5$5 = _taggedTemplateLiteral(["\n  background: transparent no-repeat center center / cover;\n  display: block;\n  overflow: hidden;\n  height: auto;\n  position: relative;\n\n  &::before {\n    content: '';\n    padding-bottom: 100%;\n    display: block;\n  }\n\n  ", ";\n\n  ", ";\n"])), (_ref) => {
  let {
    $cardSize
  } = _ref;
  return mediaSizeStyles[$cardSize];
}, loadingOverlay);
var Wrap$1 = (props) => {
  const {
    props: {
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  return import_react2.default.createElement(StyledWrap, _extends({
    $cardSize: size
  }, props));
};
var _templateObject$c;
var ImageWrap = dt(Wrap$1).attrs({
  className: "".concat(classNames.media, " ").concat(classNames.image)
})(_templateObject$c || (_templateObject$c = _taggedTemplateLiteral(["\n  background-image: ", ";\n"])), (_ref) => {
  let {
    url
  } = _ref;
  return url ? "url('".concat(imageProxy(url), "')") : "";
});
var ImageComponent = (props) => {
  const {
    state: {
      imageUrl
    }
  } = (0, import_react2.useContext)(GlobalContext);
  return import_react2.default.createElement(ImageWrap, _extends({
    url: imageUrl
  }, props));
};
var _templateObject$b;
var _templateObject2$8;
var _templateObject3$7;
var _templateObject4$6;
var _FooterEmpty;
var MediaEmpty = dt(ImageComponent)(_templateObject$b || (_templateObject$b = _taggedTemplateLiteral(["\n  ", ";\n"])), emptyStateImageAnimation);
var HeaderEmpty = dt("span")(_templateObject2$8 || (_templateObject2$8 = _taggedTemplateLiteral(["\n  opacity: 0.8;\n  height: 16px;\n  width: ", ";\n  display: block;\n  background: #e1e8ed;\n  margin: ", ";\n  ", ";\n\n  ", ";\n"])), (_ref) => {
  let {
    $cardSize
  } = _ref;
  return !isSmall($cardSize) ? "60%" : "75%";
}, (_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return !isSmall($cardSize) ? "2px 0 8px" : "0 20px 0 0";
}, emptyStateAnimation, (_ref3) => {
  let {
    $cardSize
  } = _ref3;
  return !isLarge($cardSize) && "\n    height: 15px;\n  ";
});
var DescriptionEmpty = dt("span")(_templateObject3$7 || (_templateObject3$7 = _taggedTemplateLiteral(["\n  opacity: 0.8;\n  height: 14px;\n  width: 95%;\n  display: block;\n  position: relative;\n  ", ";\n  animation-delay: 0.125s;\n"])), emptyStateAnimation);
var FooterEmpty = dt("span")(_templateObject4$6 || (_templateObject4$6 = _taggedTemplateLiteral(["\n  opacity: 0.8;\n  height: 12px;\n  width: 30%;\n  display: block;\n  ", " animation-delay: .25s;\n\n  ", ";\n"])), emptyStateAnimation, (_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return !isLarge($cardSize) && "\n    height: 10px;\n  ";
});
var CardEmptyState = () => {
  const {
    props: {
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const isSmallCard = isSmall(size);
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(MediaEmpty, {
    $cardSize: size
  }), import_react2.default.createElement(Content, {
    $cardSize: size
  }, import_react2.default.createElement(HeaderEmpty, {
    $cardSize: size
  }), !isSmallCard ? import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(DescriptionEmpty, {
    $cardSize: size
  }), import_react2.default.createElement(DescriptionEmpty, {
    $cardSize: size,
    style: {
      marginBottom: "12px"
    }
  })) : null, _FooterEmpty || (_FooterEmpty = import_react2.default.createElement(FooterEmpty, null))));
};
var _templateObject$a;
var MediaButton = dt("div")(_templateObject$a || (_templateObject$a = _taggedTemplateLiteral(["\n  backface-visibility: hidden;\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n  transition: ", ";\n  will-change: transform;\n\n  > svg {\n    display: block;\n  }\n\n  &:active:not(:focus) {\n    transform: scale(0.9);\n  }\n"])), transition.short("transform"));
var _path$2;
var _path2$2;
var _templateObject$9;
var _templateObject2$7;
var _templateObject3$6;
var _templateObject4$5;
var _templateObject5$4;
var _templateObject6$1;
var _templateObject7$1;
var VolumeMute = (props) => import_react2.default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 14 14"
}, props), _path$2 || (_path$2 = import_react2.default.createElement("path", {
  fill: "#FFF",
  fillRule: "evenodd",
  stroke: "none",
  strokeWidth: "1",
  d: "M15.5 6.205l-.705-.705L13 7.295 11.205 5.5l-.705.705L12.295 8 10.5 9.795l.705.705L13 8.705l1.795 1.795.705-.705L13.705 8 15.5 6.205zM9 15a.5.5 0 01-.355-.15L4.835 11H1.5a.5.5 0 01-.5-.5v-5a.5.5 0 01.5-.5h3.335l3.81-3.85a.5.5 0 01.705 0 .5.5 0 01.15.35v13a.5.5 0 01-.5.5z",
  transform: "translate(-1 -1)"
})));
var VolumeUp = (props) => import_react2.default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 14 14"
}, props), _path2$2 || (_path2$2 = import_react2.default.createElement("path", {
  fill: "#FFF",
  fillRule: "evenodd",
  stroke: "none",
  strokeWidth: "1",
  d: "M13.58 4.04l-.765.645a5 5 0 01-.145 6.615l.735.7a6 6 0 00.175-7.94v-.02zM10.79 6a3 3 0 01-.09 3.97l.735.68a4 4 0 00.115-5.295L10.79 6zM9 15a.5.5 0 01-.355-.15L4.835 11H1.5a.5.5 0 01-.5-.5v-5a.5.5 0 01.5-.5h3.335l3.81-3.85a.5.5 0 01.705 0 .5.5 0 01.15.35v13a.5.5 0 01-.5.5z",
  transform: "translate(-1 -1)"
})));
var BottomControls = dt("div")(_templateObject$9 || (_templateObject$9 = _taggedTemplateLiteral(["\n  z-index: 2;\n  position: absolute;\n  bottom: ", "px;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: ", ";\n  will-change: opacity;\n"])), (_ref) => {
  let {
    $cardSize
  } = _ref;
  return isLarge($cardSize) ? 18 : 14;
}, transition.medium("opacity"));
var VolumeIcon = dt("svg")(_templateObject2$7 || (_templateObject2$7 = _taggedTemplateLiteral(["\n  stroke: #fff;\n"])));
var VolumeButton = dt(MediaButton).attrs({
  className: classNames.volumeControl
})(_templateObject3$6 || (_templateObject3$6 = _taggedTemplateLiteral(["\n  ", " {\n    width: ", "px;\n    height: ", "px;\n\n    ", "\n  }\n"])), VolumeIcon, (_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return isLarge($cardSize) ? 16 : 14;
}, (_ref3) => {
  let {
    $cardSize
  } = _ref3;
  return isLarge($cardSize) ? 16 : 14;
}, (_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return !isLarge($cardSize) && media.mobile(_templateObject4$5 || (_templateObject4$5 = _taggedTemplateLiteral(["\n      width: 12px;\n      height: 12px;\n    "])));
});
var PlaybackRateButton = dt(MediaButton).attrs({
  className: classNames.rateControl
})(_templateObject5$4 || (_templateObject5$4 = _taggedTemplateLiteral(["\n  font-size: ", "px;\n  min-width: ", "px;\n  line-height: 1;\n  font-weight: bold;\n  border: 1.5px solid #fff;\n  border-radius: 9999px;\n  padding: 1px 5px;\n  text-align: center;\n  color: #fff;\n  margin-left: 10px;\n\n  ", "\n"])), (_ref5) => {
  let {
    $cardSize
  } = _ref5;
  return isLarge($cardSize) ? 12 : 10;
}, (_ref6) => {
  let {
    $cardSize
  } = _ref6;
  return isLarge($cardSize) ? 33 : 28;
}, (_ref7) => {
  let {
    $cardSize
  } = _ref7;
  return !isLarge($cardSize) && media.mobile(_templateObject6$1 || (_templateObject6$1 = _taggedTemplateLiteral(["\n    font-size: 8px;\n    margin-left: 8px;\n    min-width: 23px;\n  "])));
});
var TimeLabel = dt("span").attrs({
  className: classNames.progressTime
})(_templateObject7$1 || (_templateObject7$1 = _taggedTemplateLiteral(["\n  margin: ", ";\n  font-family: ", ";\n  font-size: 12px;\n  padding: 0 16px;\n  color: #fff;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n"])), (_ref8) => {
  let {
    $right
  } = _ref8;
  return !$right ? "0 auto 0 0" : "0 0 0 auto";
}, font.mono);
var FooterControls = (_ref9) => {
  let {
    $cardSize,
    currentTime,
    endTime,
    isMuted,
    onMuteClick,
    onPlaybackRateClick,
    playbackRate
  } = _ref9;
  const VolumeComponent = (0, import_react2.useMemo)(() => isMuted ? VolumeMute : VolumeUp, [isMuted]);
  const isLargeCard = (0, import_react2.useMemo)(() => isLarge($cardSize), [$cardSize]);
  return import_react2.default.createElement(BottomControls, {
    $cardSize
  }, isLargeCard && import_react2.default.createElement(TimeLabel, null, currentTime), import_react2.default.createElement(VolumeButton, {
    title: isMuted ? "Unmute" : "Mute",
    $cardSize,
    onClick: onMuteClick
  }, import_react2.default.createElement(VolumeIcon, {
    as: VolumeComponent
  })), import_react2.default.createElement(PlaybackRateButton, {
    title: "Playback Rate",
    $cardSize,
    onClick: onPlaybackRateClick
  }, import_react2.default.createElement("span", null, playbackRate, "x")), isLargeCard && import_react2.default.createElement(TimeLabel, {
    $right: true
  }, endTime));
};
var _excluded$5 = ["$isPlaying"];
var _path$1;
var _path2$1;
var _templateObject$8;
var _templateObject2$6;
var _templateObject3$5;
var _templateObject4$4;
var Pause = (props) => import_react2.default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 16 20"
}, props), _path$1 || (_path$1 = import_react2.default.createElement("path", {
  fill: "#FFF",
  fillRule: "evenodd",
  stroke: "none",
  strokeWidth: "1",
  d: "M12 6h-2a2 2 0 00-2 2v16a2 2 0 002 2h2a2 2 0 002-2V8a2 2 0 00-2-2zm10 0h-2a2 2 0 00-2 2v16a2 2 0 002 2h2a2 2 0 002-2V8a2 2 0 00-2-2z",
  transform: "translate(-8 -6)"
})));
var Play = (props) => import_react2.default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 21 24"
}, props), _path2$1 || (_path2$1 = import_react2.default.createElement("path", {
  fill: "#FFF",
  fillRule: "evenodd",
  stroke: "none",
  strokeWidth: "1",
  d: "M7 28a1 1 0 01-1-1V5a1 1 0 011.501-.865l19 11a1 1 0 010 1.73l-19 11A.998.998 0 017 28z",
  transform: "translate(-6 -4)"
})));
var iconSizes = {
  large: "50px",
  normal: "35px",
  small: "20px"
};
var PlaybackIcon = dt("svg")(_templateObject$8 || (_templateObject$8 = _taggedTemplateLiteral(["\n  stroke: #fff;\n"])));
var PlaybackButtonWrap = dt(MediaButton).attrs({
  className: classNames.playbackControl
})(_templateObject2$6 || (_templateObject2$6 = _taggedTemplateLiteral(["\n  ", " {\n    ", "\n  }\n"])), PlaybackIcon, (_ref) => {
  let {
    $cardSize
  } = _ref;
  return lt(_templateObject3$5 || (_templateObject3$5 = _taggedTemplateLiteral(["\n      width: ", ";\n      height: ", ";\n      padding: ", ";\n\n      ", "\n    "])), iconSizes[$cardSize], iconSizes[$cardSize], isLarge($cardSize) ? 0 : "8px", !isLarge($cardSize) && !isSmall($cardSize) && media.mobile(_templateObject4$4 || (_templateObject4$4 = _taggedTemplateLiteral(["\n        width: calc(", " * 1.2);\n        height: calc(", " * 1.2);\n      "])), iconSizes.small, iconSizes.small));
});
var PlaybackButton = (_ref2) => {
  let {
    $isPlaying
  } = _ref2, props = _objectWithoutProperties(_ref2, _excluded$5);
  const PlaybackComponent = (0, import_react2.useMemo)(() => $isPlaying ? Pause : Play, [$isPlaying]);
  return import_react2.default.createElement(PlaybackButtonWrap, _extends({
    title: $isPlaying ? "Pause" : "Play"
  }, props), import_react2.default.createElement(PlaybackIcon, {
    as: PlaybackComponent
  }));
};
var _templateObject$7;
var _templateObject2$5;
var SCRUBBER_SIZE = 12;
var scrubberSizeScales = {
  normal: 0.8,
  small: 0.9
};
var getScrubberSize = (size) => Math.floor(SCRUBBER_SIZE * (scrubberSizeScales[size] || 1));
var Scrubber = dt("div").attrs((_ref) => {
  let {
    $isVisible,
    $positionX
  } = _ref;
  return {
    style: {
      left: $positionX,
      transform: "scale(".concat($isVisible ? 1 : 0.5, ") translate(-50%, -50%)"),
      opacity: $isVisible ? 1 : 0,
      visibility: $isVisible ? "$visible" : "hidden"
    }
  };
})(_templateObject$7 || (_templateObject$7 = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 50%;\n  background: #ffffff;\n  border-radius: 50%;\n  transform-origin: center center;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  transition: ", ";\n  will-change: left, transform, opacity, visibility;\n  backface-visibility: hidden;\n  z-index: 3;\n\n  ", "\n"])), transition.short("transform", "opacity", "visibility"), (_ref2) => {
  let {
    $cardSize
  } = _ref2;
  const scrubberSize = getScrubberSize($cardSize);
  return lt(_templateObject2$5 || (_templateObject2$5 = _taggedTemplateLiteral(["\n      height: ", "px;\n      width: ", "px;\n    "])), scrubberSize, scrubberSize);
});
var _excluded$4 = ["$isDragging", "$isVisible", "label", "$positionX", "size"];
var _templateObject$6;
var BASE_FONT_SIZE = 11;
var sizeScales$1 = {
  normal: 0.8
};
var getMarkerFontSize = (size) => BASE_FONT_SIZE * (sizeScales$1[size] || 1);
var TooltipBase = dt("span").attrs((_ref) => {
  let {
    $position,
    $isDragging,
    $visible
  } = _ref;
  return {
    style: {
      left: "".concat($position, "px"),
      top: $visible ? "-4px" : "0px",
      visibility: $visible ? "$visible" : "hidden",
      opacity: $visible ? 1 : 0,
      transform: "translate(-50%, ".concat(!$isDragging ? -100 : -110, "%)")
    }
  };
})(_templateObject$6 || (_templateObject$6 = _taggedTemplateLiteral(["\n  position: absolute;\n  background: rgba(24, 25, 25, 0.75);\n  color: #fff;\n  text-shadow: 0 1px 2px rgba(24, 25, 25, 0.15);\n  padding: 2px 3px;\n  border-radius: 4px;\n  font-family: ", ";\n  font-size: ", "px;\n  line-height: 1;\n  transition: ", ",\n    ", ";\n  will-change: top, left, visibility, opacity, transform;\n  backface-visibility: hidden;\n"])), font.mono, (_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return getMarkerFontSize($cardSize);
}, transition.medium("opacity", "visibility", "transform"), transition.long("top"));
var Tooltip = (0, import_react2.forwardRef)((_ref3, ref) => {
  let {
    $isDragging,
    $isVisible,
    label,
    $positionX,
    size
  } = _ref3, props = _objectWithoutProperties(_ref3, _excluded$4);
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(TooltipBase, _extends({
    $visible: $isVisible,
    $position: $positionX,
    $cardSize: size,
    ref,
    $isDragging
  }, props), label));
});
Tooltip.displayName = "Tooltip";
var _excluded$3 = ["key"];
var _templateObject$5;
var _templateObject2$4;
var _templateObject3$4;
var _templateObject4$3;
var _templateObject5$3;
var _templateObject6;
var _templateObject7;
var HEIGHT$1 = 6;
var PADDING = 6;
var heightScales = {
  normal: 0.7,
  small: 0.6
};
var activeHeightScales = {
  small: 0.9,
  large: 1.4
};
var getProgressBarHeight = (size) => Math.floor(HEIGHT$1 * (heightScales[size] || 1));
var getProgressBarActiveHeight = (size) => Math.floor(HEIGHT$1 * (activeHeightScales[size] || 1));
var OuterWrap$1 = dt("div").attrs(() => ({
  className: classNames.progressBar
}))(_templateObject$5 || (_templateObject$5 = _taggedTemplateLiteral(["\n  position: relative;\n  padding: ", "px ", "px ", "px;\n  z-index: 2;\n  backface-visibility: hidden;\n"])), PADDING, PADDING / 2, PADDING / 2);
var BarsWrap = dt("div").attrs((_ref) => {
  let {
    $cardSize,
    $isDragging
  } = _ref;
  if ($isDragging) {
    const activeHeight = getProgressBarActiveHeight($cardSize);
    return {
      style: {
        height: "".concat(activeHeight, "px")
      }
    };
  }
  return {};
})(_templateObject2$4 || (_templateObject2$4 = _taggedTemplateLiteral(["\n  background: transparent;\n  border-radius: 9999px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  background: rgba(255, 255, 255, 0.15);\n  transition: ", ";\n  will-change: height;\n  pointer-events: none;\n  position: relative;\n\n  ", "\n"])), transition.short("height"), (_ref2) => {
  let {
    $cardSize
  } = _ref2;
  const height = getProgressBarHeight($cardSize);
  const activeHeight = getProgressBarActiveHeight($cardSize);
  return lt(_templateObject3$4 || (_templateObject3$4 = _taggedTemplateLiteral(["\n      height: ", "px;\n\n      ", ":hover & {\n        height: ", "px;\n      }\n    "])), height, OuterWrap$1, activeHeight);
});
var ProgressLine = dt("div")(_templateObject4$3 || (_templateObject4$3 = _taggedTemplateLiteral(["\n  border-radius: inherit;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n"])));
var ProgressMask = dt("div").attrs((_ref3) => {
  let {
    $maskScale
  } = _ref3;
  return {
    style: {
      transform: "scaleX(".concat($maskScale, ")")
    }
  };
})(_templateObject5$3 || (_templateObject5$3 = _taggedTemplateLiteral(["\n  position: absolute;\n  left: 0;\n  top: -50%;\n  height: 200%;\n  width: 100%;\n  background: #ffffff;\n  transform-origin: left center;\n  will-change: transform;\n"])));
var ProgressHover = dt("div").attrs((_ref4) => {
  let {
    $cursorRatio,
    $isHovering,
    $progressPercent
  } = _ref4;
  return {
    style: {
      left: $progressPercent,
      transform: "scaleX(".concat($cursorRatio, ")"),
      opacity: $isHovering ? 1 : 0,
      visibility: $isHovering ? "$visible" : "hidden"
    }
  };
})(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.4);\n  transform-origin: left center;\n  transition: ", ";\n  will-change: left, transform, opacity, $visible;\n"])), transition.short("opacity", "visibility"));
var BufferedChunk = dt("div").attrs((_ref5) => {
  let {
    start,
    end
  } = _ref5;
  return {
    style: {
      left: "".concat(start, "px"),
      right: "".concat(end, "px")
    }
  };
})(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n  background: rgba(255, 255, 255, 0.35);\n  position: absolute;\n  top: 0;\n  bottom: 0;\n"])));
var ProgressBar = (_ref6) => {
  let {
    bufferedMedia,
    cursorX,
    duration,
    hoveredTime,
    $isDragging,
    $isHovering,
    onClick,
    onMouseDown,
    onMouseOver,
    progress,
    showTooltip
  } = _ref6;
  const {
    props: {
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const wrapRef = (0, import_react2.useRef)();
  const tooltipRef = (0, import_react2.useRef)();
  const isSmallCard = (0, import_react2.useMemo)(() => isSmall(size), [size]);
  const getWrapWidth = (0, import_react2.useCallback)(() => {
    if (wrapRef.current) {
      return wrapRef.current.getBoundingClientRect().width - PADDING;
    }
    return 0;
  }, []);
  const progressRatio = (0, import_react2.useMemo)(() => clampNumber(progress / duration, 0, 1), [duration, progress]);
  const $progressPercent = (0, import_react2.useMemo)(() => "".concat(clampNumber(progressRatio * 100, 1, 99), "%"), [progressRatio]);
  const $cursorRatio = (0, import_react2.useMemo)(() => {
    if (wrapRef.current) {
      const wrapWidth = getWrapWidth();
      const startPoint = progressRatio * wrapWidth;
      const cursorPosition = cursorX - startPoint;
      const width = wrapWidth - startPoint;
      if (cursorPosition > 0) {
        return clampNumber((cursorPosition / width).toFixed(3), 0, 0.99);
      }
    }
    return 0;
  }, [cursorX, getWrapWidth, progressRatio]);
  const bufferedMediaChunks = (0, import_react2.useMemo)(() => {
    const wrapWidth = getWrapWidth();
    return bufferedMedia.map((chunk, key) => {
      const start = chunk.start * wrapWidth;
      const end = wrapWidth - chunk.end * wrapWidth;
      return {
        key,
        start,
        end
      };
    });
  }, [bufferedMedia, getWrapWidth]);
  const tooltipLabel = (0, import_react2.useMemo)(() => formatSeconds(hoveredTime), [hoveredTime]);
  const tooltipPositionX = (0, import_react2.useMemo)(() => {
    if (wrapRef.current && tooltipRef.current) {
      const wrapWidth = getWrapWidth();
      const tooltipWidth = tooltipRef.current.getBoundingClientRect().width;
      const tooltipHalf = tooltipWidth / 2;
      return clampNumber(cursorX, tooltipHalf, wrapWidth - tooltipHalf);
    }
    return 0;
  }, [cursorX, getWrapWidth]);
  const mouseEvents = (0, import_react2.useMemo)(() => ({
    onClick,
    onMouseDown,
    onMouseOver
  }), [onClick, onMouseDown, onMouseOver]);
  const showAccessories = (0, import_react2.useMemo)(() => $isDragging || $isHovering, [$isDragging, $isHovering]);
  return import_react2.default.createElement(OuterWrap$1, _extends({
    $cardSize: size,
    ref: wrapRef
  }, mouseEvents), import_react2.default.createElement(BarsWrap, {
    $cardSize: size,
    $isDragging
  }, import_react2.default.createElement(ProgressLine, null, import_react2.default.createElement(ProgressHover, {
    $cursorRatio,
    $isHovering,
    $progressPercent
  }), bufferedMediaChunks.map((_ref7) => {
    let {
      key
    } = _ref7, chunk = _objectWithoutProperties(_ref7, _excluded$3);
    return import_react2.default.createElement(BufferedChunk, _extends({
      key
    }, chunk));
  }), import_react2.default.createElement(ProgressMask, {
    $maskScale: progressRatio
  })), import_react2.default.createElement(Scrubber, {
    $cardSize: size,
    $isVisible: showAccessories,
    $positionX: $progressPercent
  }), !isSmallCard && import_react2.default.createElement(Tooltip, {
    $isDragging,
    $isVisible: showAccessories,
    label: tooltipLabel,
    $positionX: tooltipPositionX,
    ref: tooltipRef,
    size
  })));
};
var _path;
var _path2;
var _templateObject$4;
var _templateObject2$3;
var _templateObject3$3;
var _excluded$2 = ["$cardSize"];
var _excluded2$1 = ["$cardSize"];
var _excluded3 = ["type", "$cardSize"];
var Backward = (_ref) => {
  let props = _objectWithoutProperties(_ref, _excluded$2);
  return import_react2.default.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 29"
  }, props), _path || (_path = import_react2.default.createElement("path", {
    fill: "#FFF",
    fillRule: "evenodd",
    stroke: "none",
    strokeWidth: "1",
    d: "M4 18c0 6.627 5.373 12 12 12s12-5.373 12-12S22.627 6 16 6h-4V1L6 7l6 6V8h4c5.523 0 10 4.477 10 10s-4.477 10-10 10S6 23.523 6 18H4zm15.63 4.13a2.84 2.84 0 01-1.28-.27 2.44 2.44 0 01-.89-.77 3.57 3.57 0 01-.52-1.25 7.69 7.69 0 01-.17-1.68 7.83 7.83 0 01.17-1.68c.094-.445.27-.87.52-1.25.23-.325.535-.59.89-.77.4-.188.838-.28 1.28-.27a2.44 2.44 0 012.16 1 5.23 5.23 0 01.7 2.93 5.23 5.23 0 01-.7 2.93 2.44 2.44 0 01-2.16 1.08zm0-1.22c.411.025.8-.19 1-.55a3.38 3.38 0 00.37-1.51v-1.38a3.31 3.31 0 00-.29-1.5 1.23 1.23 0 00-2.06 0 3.31 3.31 0 00-.29 1.5v1.38a3.38 3.38 0 00.29 1.51c.195.356.575.57.98.55zm-9 1.09v-1.18h2v-5.19l-1.86 1-.55-1.06 2.32-1.3H14v6.5h1.78V22h-5.15z",
    transform: "translate(-4 -1)"
  })));
};
var Forward = (_ref2) => {
  let props = _objectWithoutProperties(_ref2, _excluded2$1);
  return import_react2.default.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 29"
  }, props), _path2 || (_path2 = import_react2.default.createElement("path", {
    fill: "#FFF",
    fillRule: "evenodd",
    stroke: "none",
    strokeWidth: "1",
    d: "M26 18c0 5.523-4.477 10-10 10S6 23.523 6 18 10.477 8 16 8h4v5l6-6-6-6v5h-4C9.373 6 4 11.373 4 18s5.373 12 12 12 12-5.373 12-12h-2zm-6.36 4.13a2.81 2.81 0 01-1.28-.27 2.36 2.36 0 01-.89-.77 3.39 3.39 0 01-.47-1.25 7.12 7.12 0 01-.17-1.68 7.24 7.24 0 01.17-1.68 3.46 3.46 0 01.52-1.25 2.36 2.36 0 01.89-.77c.4-.19.838-.282 1.28-.27a2.44 2.44 0 012.16 1 5.31 5.31 0 01.7 2.93 5.31 5.31 0 01-.7 2.93 2.44 2.44 0 01-2.21 1.08zm0-1.22a1 1 0 001-.55c.22-.472.323-.99.3-1.51v-1.38a3.17 3.17 0 00-.3-1.5 1.22 1.22 0 00-2.05 0 3.18 3.18 0 00-.29 1.5v1.38a3.25 3.25 0 00.29 1.51 1 1 0 001.05.55zm-7.02-3.49c.355.035.71-.06 1-.27a.84.84 0 00.31-.68v-.08a.94.94 0 00-.3-.74 1.2 1.2 0 00-.83-.27 1.65 1.65 0 00-.89.24 2.1 2.1 0 00-.68.68l-.93-.83a5.37 5.37 0 01.44-.51 2.7 2.7 0 01.54-.4 2.55 2.55 0 01.7-.27 3.25 3.25 0 01.87-.1 3.94 3.94 0 011.06.14c.297.078.576.214.82.4.224.168.408.383.54.63.123.26.184.543.18.83a2 2 0 01-.11.67 1.82 1.82 0 01-.32.52 1.79 1.79 0 01-.47.36 2.27 2.27 0 01-.57.2V18c.219.04.431.11.63.21a1.7 1.7 0 01.85.93c.084.234.124.481.12.73a2 2 0 01-.2.92 2 2 0 01-.58.72 2.66 2.66 0 01-.89.45 3.76 3.76 0 01-1.15.16 4.1 4.1 0 01-1-.11 3.1 3.1 0 01-.76-.31 2.76 2.76 0 01-.56-.45 4.22 4.22 0 01-.44-.55l1.07-.81c.082.147.175.288.28.42.105.128.226.243.36.34.137.097.29.171.45.22a2 2 0 00.57.07 1.45 1.45 0 001-.3 1.12 1.12 0 00.34-.85v-.08a1 1 0 00-.37-.8 1.78 1.78 0 00-1.06-.28h-.76v-1.21h.74z",
    transform: "translate(-4 -1)"
  })));
};
var SeekIcon = dt("svg")(_templateObject$4 || (_templateObject$4 = _taggedTemplateLiteral(["\n  stroke: #fff;\n  width: ", "px;\n  height: ", "px;\n\n  ", "\n"])), (_ref3) => {
  let {
    $cardSize
  } = _ref3;
  return isLarge($cardSize) ? 30 : 24;
}, (_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return isLarge($cardSize) ? 30 : 24;
}, (_ref5) => {
  let {
    $cardSize
  } = _ref5;
  return !isLarge($cardSize) && media.mobile(_templateObject2$3 || (_templateObject2$3 = _taggedTemplateLiteral(["\n    width: 0;\n    height: 0;\n  "])));
});
var SeekButtonWrap = dt(MediaButton)(_templateObject3$3 || (_templateObject3$3 = _taggedTemplateLiteral(["\n  margin: 0 ", ";\n"])), (_ref6) => {
  let {
    $cardSize
  } = _ref6;
  return isLarge($cardSize) ? "28px" : "3px";
});
var SeekButton = (_ref7) => {
  let {
    type = "rewind",
    $cardSize
  } = _ref7, props = _objectWithoutProperties(_ref7, _excluded3);
  const IconComponent = (0, import_react2.useMemo)(() => type === "rewind" ? Backward : Forward, [type]);
  return import_react2.default.createElement(SeekButtonWrap, _extends({
    title: type === "rewind" ? "Rewind" : "Forward",
    $cardSize
  }, props), import_react2.default.createElement(SeekIcon, {
    as: IconComponent,
    $cardSize
  }));
};
var _templateObject$3;
var _templateObject2$2;
var _templateObject3$2;
var _templateObject4$2;
var _templateObject5$2;
var _Svg;
var BASE_SIZE = 12;
var BASE_OFFSET = 6;
var offsetScales = {
  normal: 0.8,
  small: 0.6
};
var sizeScales = {
  normal: 0.9,
  small: 0.8
};
var getSpinnerOffset = (size) => Math.floor(BASE_OFFSET * (offsetScales[size] || 1));
var getSpinnerSize = (size) => Math.floor(BASE_SIZE * (sizeScales[size] || 1));
var rotate = mt(_templateObject$3 || (_templateObject$3 = _taggedTemplateLiteral(["\n  100% {\n    transform: rotate(360deg);\n  }\n"])));
var dash = mt(_templateObject2$2 || (_templateObject2$2 = _taggedTemplateLiteral(["\n  0% {\n    stroke-dasharray: 1, 150;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -35;\n  }\n  100% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -124;\n  }\n"])));
var Wrap = dt(MediaButton).attrs((_ref) => {
  let {
    $isVisible
  } = _ref;
  return {
    style: {
      opacity: $isVisible ? 1 : 0,
      visibility: $isVisible ? "$visible" : "hidden"
    }
  };
})((_ref2) => {
  let {
    $cardSize
  } = _ref2;
  const size = "".concat(getSpinnerSize($cardSize), "px");
  const offset = "".concat(getSpinnerOffset($cardSize), "px");
  return lt(_templateObject3$2 || (_templateObject3$2 = _taggedTemplateLiteral(["\n    position: absolute;\n    width: ", ";\n    right: ", ";\n    top: ", ";\n    transition: ", ";\n    will-change: opacity, visibility;\n    pointer-events: none;\n  "])), size, offset, offset, transition.medium("opacity", "visibility"));
});
var Svg = dt("svg")(_templateObject4$2 || (_templateObject4$2 = _taggedTemplateLiteral(["\n  width: 100%;\n  animation: ", " 2s linear infinite;\n  will-change: transform;\n"])), rotate);
var Circle = dt("circle")(_templateObject5$2 || (_templateObject5$2 = _taggedTemplateLiteral(["\n  stroke: #fff;\n  stroke-linecap: round;\n  stroke-width: 7;\n  fill: none;\n  animation: ", " 1.5s ease-in-out infinite;\n  will-change: stroke-dasharray, stroke-dashoffset;\n"])), dash);
var Spinner = (_ref3) => {
  let {
    size,
    $isVisible
  } = _ref3;
  return import_react2.default.createElement(Wrap, {
    $cardSize: size,
    className: classNames.spinner,
    $isVisible
  }, _Svg || (_Svg = import_react2.default.createElement(Svg, {
    viewBox: "0 0 50 50"
  }, import_react2.default.createElement(Circle, {
    cx: "25",
    cy: "25",
    r: "20"
  }))));
};
var _templateObject$2;
var _templateObject2$1;
var _templateObject3$1;
var _templateObject4$1;
var _templateObject5$1;
var SPACE_KEY = 32;
var L_ARROW_KEY = 37;
var R_ARROW_KEY = 39;
var M_KEY = 77;
var OuterWrap = dt("div").attrs({
  className: classNames.mediaControls
})(_templateObject$2 || (_templateObject$2 = _taggedTemplateLiteral(["\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  transition: ", ", ", ";\n  will-change: background;\n  display: flex;\n  flex-direction: column;\n  pointer-events: auto;\n\n  ", "\n"])), transition.long("background"), transition.medium("opacity"), (_ref) => {
  let {
    $hasInteracted,
    $isDragging,
    $isPlaying
  } = _ref;
  const bg = "rgba(0, 0, 0, 0.35)";
  const dragBg = "rgba(0, 0, 0, 0.2)";
  const isPaused = $hasInteracted && !$isPlaying;
  return lt(_templateObject2$1 || (_templateObject2$1 = _taggedTemplateLiteral(["\n      .", ":hover & {\n        background: ", ";\n      }\n\n      .", ":not(:hover) & {\n        opacity: ", ";\n        ", ";\n      }\n    "])), classNames.main, !$isDragging ? bg : dragBg, classNames.main, !$hasInteracted || isPaused ? 1 : 0, isPaused && "background: ".concat(bg));
});
var InnerWrap = dt("div")(_templateObject3$1 || (_templateObject3$1 = _taggedTemplateLiteral(["\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n"])));
var ControlsTop = dt("div")(_templateObject4$1 || (_templateObject4$1 = _taggedTemplateLiteral(["\n  flex: 1;\n\n  ", "\n"])), (_ref2) => {
  let {
    $isVisible
  } = _ref2;
  return !$isVisible && lt(_templateObject5$1 || (_templateObject5$1 = _taggedTemplateLiteral(["\n      *[class*='", "']:not(.", ") {\n        transition: ", ";\n        opacity: 0;\n        visibility: hidden;\n      }\n    "])), classNames.mediaControls, classNames.progressTime, transition.medium("opacity", "visibility"));
});
var getNextPlaybackRate = (rate) => {
  switch (rate) {
    case 1:
      return 1.25;
    case 1.25:
      return 1.5;
    case 1.5:
      return 2;
    default:
      return 1;
  }
};
var Controls = (_ref3) => {
  let {
    MediaComponent,
    mediaProps
  } = _ref3;
  const {
    props: {
      autoPlay,
      controls,
      mediaRef: propRef,
      muted,
      loop,
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const [duration, setDuration] = (0, import_react2.useState)(0);
  const [progress, setProgress] = (0, import_react2.useState)(0);
  const [buffered, setBuffered] = (0, import_react2.useState)([]);
  const [cursorX, setCursorX] = (0, import_react2.useState)(0);
  const [hoveredTime, setHoveredTime] = (0, import_react2.useState)(0);
  const [$isPlaying, setIsPlaying] = (0, import_react2.useState)(autoPlay);
  const [isMuted, setIsMuted] = (0, import_react2.useState)(muted);
  const [isBuffering, setIsBuffering] = (0, import_react2.useState)(false);
  const [$isHovering, setIsHovering] = (0, import_react2.useState)(false);
  const [$isDragging, setIsDragging] = (0, import_react2.useState)(false);
  const [playbackRate, setPlaybackRate] = (0, import_react2.useState)(1);
  const [$hasInteracted, setHasInteracted] = (0, import_react2.useState)(autoPlay);
  const [pausedByDrag, setPausedByDrag] = (0, import_react2.useState)(false);
  const mediaRef = (0, import_react2.useRef)();
  const setRefs = (0, import_react2.useCallback)((node2) => {
    mediaRef.current = node2;
    if (propRef) {
      if (isFunction(propRef)) {
        propRef(node2);
      } else {
        propRef.current = node2;
      }
    }
  }, [propRef]);
  const isNotSmall = (0, import_react2.useMemo)(() => !isSmall(size), [size]);
  const mediaEvents = (0, import_react2.useMemo)(() => ({
    onCanPlay: () => setIsBuffering(false),
    onLoadedMetadata: (e) => setDuration(e.currentTarget.duration),
    onPause: () => setIsPlaying(false),
    onPlay: () => setIsPlaying(true),
    onPlaying: () => setIsBuffering(false),
    onProgress: (e) => setBuffered(e.currentTarget.buffered),
    onRateChange: (e) => setPlaybackRate(e.currentTarget.playbackRate),
    onTimeUpdate: (e) => setProgress(e.currentTarget.currentTime),
    onVolumeChange: (e) => setIsMuted(e.currentTarget.muted),
    onWaiting: (e) => setIsBuffering(true)
  }), []);
  const evaluateCursorPosition = (0, import_react2.useCallback)((event) => {
    if (mediaRef.current) {
      const bounds = event.currentTarget.getBoundingClientRect();
      const cursor = clampNumber(Math.floor(event.clientX - bounds.left), 0, bounds.width);
      const time = cursor / bounds.width * mediaRef.current.duration;
      return {
        cursor,
        time
      };
    }
    return {
      cursor: 0,
      time: 0
    };
  }, []);
  const togglePlayback = (0, import_react2.useCallback)(() => {
    if (mediaRef.current) {
      if (mediaRef.current.paused) {
        if (!$hasInteracted) {
          setHasInteracted(true);
        }
        mediaRef.current.play();
      } else {
        mediaRef.current.pause();
      }
    }
  }, [$hasInteracted]);
  const jumpTo = (0, import_react2.useCallback)((time) => {
    if (mediaRef.current) {
      const t = clampNumber(time, 0, mediaRef.current.duration);
      mediaRef.current.currentTime = t;
      setProgress(t);
    }
  }, []);
  const onSeekClick = (0, import_react2.useCallback)((event, type) => {
    event.preventDefault();
    event.stopPropagation();
    if (mediaRef.current) {
      const {
        currentTime: currentTime2
      } = mediaRef.current;
      jumpTo(type === "rewind" ? currentTime2 - 10 : currentTime2 + 30);
    }
  }, [jumpTo]);
  const onMuteClick = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    if (mediaRef.current) {
      mediaRef.current.muted = !mediaRef.current.muted;
    }
  }, []);
  const onPlaybackRateClick = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    if (mediaRef.current) {
      mediaRef.current.playbackRate = getNextPlaybackRate(mediaRef.current.playbackRate);
    }
  }, []);
  const onProgressBarClick = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    setIsDragging(false);
  }, []);
  const onProgressBarMouseDown = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    setIsDragging(true);
    const {
      time
    } = evaluateCursorPosition(event);
    jumpTo(time);
  }, [evaluateCursorPosition, jumpTo]);
  const onProgressBarMouseOver = (0, import_react2.useCallback)(() => setIsHovering(true), []);
  const onWrapClick = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    if ($isDragging) {
      setIsDragging(false);
    } else {
      togglePlayback();
    }
  }, [$isDragging, togglePlayback]);
  const onWrapMouseMove = (0, import_react2.useCallback)((event) => {
    if (($isDragging || $isHovering) && mediaRef.current) {
      event.preventDefault();
      const {
        cursor,
        time
      } = evaluateCursorPosition(event);
      setHoveredTime(time);
      setCursorX(cursor);
      if ($isDragging) {
        if (!mediaRef.current.paused) {
          mediaRef.current.pause();
          setPausedByDrag(true);
        }
        jumpTo(time);
      }
    }
  }, [evaluateCursorPosition, $isDragging, $isHovering, jumpTo]);
  const onWrapMouseOver = (0, import_react2.useCallback)((event) => {
    if ($isDragging && event.buttons === 0) {
      setIsDragging(false);
    }
  }, [$isDragging]);
  const onWrapKeyDown = (0, import_react2.useCallback)((event) => {
    if ($isDragging) {
      return;
    }
    const {
      keyCode
    } = event;
    if ([SPACE_KEY, L_ARROW_KEY, R_ARROW_KEY, M_KEY].includes(keyCode) && mediaRef.current) {
      event.preventDefault();
      switch (keyCode) {
        case SPACE_KEY:
          togglePlayback();
          break;
        case L_ARROW_KEY:
          jumpTo(mediaRef.current.currentTime - 5);
          break;
        case R_ARROW_KEY:
          jumpTo(mediaRef.current.currentTime + 5);
          break;
        case M_KEY:
          mediaRef.current.muted = !mediaRef.current.muted;
          break;
      }
    }
  }, [$isDragging, jumpTo, togglePlayback]);
  const outerWrapEvents = (0, import_react2.useMemo)(() => ({
    onClick: onWrapClick,
    onKeyDown: onWrapKeyDown,
    onMouseMove: onWrapMouseMove,
    onMouseOut: () => setIsHovering(false),
    onMouseOver: onWrapMouseOver
  }), [onWrapClick, onWrapKeyDown, onWrapMouseMove, onWrapMouseOver]);
  const outerWrapTitle = (0, import_react2.useMemo)(() => $hasInteracted ? {
    title: ""
  } : {}, [$hasInteracted]);
  const bufferedMedia = (0, import_react2.useMemo)(() => {
    if (buffered && buffered.length && mediaRef.current) {
      return [...Array(buffered.length).keys()].map((index) => {
        return {
          start: buffered.start(index) / mediaRef.current.duration,
          end: buffered.end(index) / mediaRef.current.duration
        };
      });
    }
    return [];
  }, [buffered]);
  const currentTime = (0, import_react2.useMemo)(() => formatSeconds(progress || 0), [progress]);
  const endTime = (0, import_react2.useMemo)(() => formatSeconds(duration || 0), [duration]);
  const footerControlsProps = (0, import_react2.useMemo)(() => ({
    $cardSize: size,
    currentTime,
    endTime,
    isMuted,
    onMuteClick,
    onPlaybackRateClick,
    playbackRate
  }), [currentTime, endTime, isMuted, onMuteClick, onPlaybackRateClick, playbackRate, size]);
  const progressBarProps = (0, import_react2.useMemo)(() => ({
    bufferedMedia,
    cursorX,
    duration,
    hoveredTime,
    $isDragging,
    $isHovering,
    onClick: onProgressBarClick,
    onMouseDown: onProgressBarMouseDown,
    onMouseOver: onProgressBarMouseOver,
    progress,
    showTooltip: $isDragging || $isHovering
  }), [bufferedMedia, cursorX, duration, hoveredTime, $isDragging, $isHovering, onProgressBarClick, onProgressBarMouseDown, onProgressBarMouseOver, progress]);
  (0, import_react2.useEffect)(() => {
    if (!$isDragging && pausedByDrag && mediaRef.current && mediaRef.current.paused) {
      mediaRef.current.play();
      setPausedByDrag(false);
    }
  }, [pausedByDrag, $isDragging]);
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(MediaComponent, _extends({}, mediaProps, mediaEvents, {
    ref: setRefs,
    autoPlay,
    loop,
    muted
  })), controls && import_react2.default.createElement(OuterWrap, _extends({}, outerWrapTitle, {
    tabIndex: 0,
    $hasInteracted,
    $isDragging,
    $isPlaying
  }, outerWrapEvents), import_react2.default.createElement(Spinner, {
    size,
    $isVisible: isBuffering
  }), !$hasInteracted ? import_react2.default.createElement(InnerWrap, null, import_react2.default.createElement(PlaybackButton, {
    $cardSize: size
  })) : import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(ControlsTop, {
    $isVisible: !$isDragging
  }, import_react2.default.createElement(InnerWrap, null, isNotSmall && import_react2.default.createElement(SeekButton, {
    className: classNames.rwControl,
    type: "rewind",
    $cardSize: size,
    onClick: (event) => onSeekClick(event, "rewind")
  }), import_react2.default.createElement(PlaybackButton, {
    $cardSize: size,
    $isPlaying
  }), isNotSmall && import_react2.default.createElement(SeekButton, {
    className: classNames.ffwControl,
    type: "fastforward",
    $cardSize: size,
    onClick: (event) => onSeekClick(event, "fastforward")
  })), isNotSmall && import_react2.default.createElement(FooterControls, footerControlsProps)), import_react2.default.createElement(ProgressBar, progressBarProps))));
};
var _templateObject$1;
var VideoDOM = dt("video")(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteral(["\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  &::media-controls-start-playback-button {\n    display: none;\n    appearance: none;\n  }\n"])));
var Video = (props) => {
  const {
    state: {
      imageUrl,
      playsInline,
      videoUrl
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const mediaProps = (0, import_react2.useMemo)(() => {
    const mediaProps2 = {
      className: "".concat(classNames.media, " ").concat(classNames.video),
      src: videoUrl,
      playsInline
    };
    if (imageUrl) mediaProps2.poster = imageProxy(imageUrl);
    return mediaProps2;
  }, [imageUrl, playsInline, videoUrl]);
  return import_react2.default.createElement(Wrap$1, _extends({
    className: "".concat(classNames.mediaWrapper, " ").concat(classNames.videoWrapper)
  }, props), import_react2.default.createElement(Controls, {
    MediaComponent: VideoDOM,
    mediaProps
  }));
};
var Audio = (props) => {
  const {
    state: {
      audioUrl
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const mediaProps = (0, import_react2.useMemo)(() => ({
    className: "".concat(classNames.media, " ").concat(classNames.audio),
    src: audioUrl
  }), [audioUrl]);
  return (
    // eslint-disable-next-line
    import_react2.default.createElement(ImageComponent, _extends({
      className: "".concat(classNames.mediaWrapper, " ").concat(classNames.audioWrapper)
    }, props), import_react2.default.createElement(Controls, {
      MediaComponent: "audio",
      mediaProps
    }))
  );
};
var isUrl = (url) => getUrlPath(url) !== null;
var MEDIA_COMPONENT = {
  video: Video,
  image: ImageComponent,
  audio: Audio
};
var getMediaType = (isAudio, isVideo) => {
  if (isAudio) return "audio";
  if (isVideo) return "video";
  return "image";
};
var CardMedia = () => {
  const {
    state: {
      imageUrl,
      isAudio,
      isVideo
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const [isLoading, setIsLoading] = (0, import_react2.useState)(isUrl(imageUrl));
  const mediaType = getMediaType(isAudio, isVideo);
  const MediaComponent = MEDIA_COMPONENT[mediaType];
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(MediaComponent, {
    $isLoading: isLoading
  }), isLoading && import_react2.default.createElement(ImageLoadCatcher, {
    src: imageUrl,
    onLoad: () => setIsLoading(false)
  }));
};
var _excluded$1 = ["href", "rel", "target", "as"];
var _templateObject;
var _templateObject2;
var _templateObject3;
var _templateObject4;
var _templateObject5;
function ownKeys$1(e, r2) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e, r3).enumerable;
    })), t.push.apply(t, o2);
  }
  return t;
}
function _objectSpread$1(e) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$1(Object(t), true).forEach(function(r3) {
      _defineProperty(e, r3, t[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function(r3) {
      Object.defineProperty(e, r3, Object.getOwnPropertyDescriptor(t, r3));
    });
  }
  return e;
}
var HEIGHT = "382px";
var contrastStyle = (_ref) => {
  let {
    $backgroundColor,
    color
  } = _ref;
  return lt(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  background-color: ", ";\n  border-color: ", ";\n  transition-property: filter;\n  will-change: filter;\n\n  &&& {\n    color: ", ";\n  }\n\n  &:hover {\n    filter: brightness(90%);\n  }\n"])), $backgroundColor, color, color);
};
var largeStyle = lt(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  flex-direction: column;\n  height: ", ";\n  ", ";\n"])), HEIGHT, media.mobile(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n    height: calc(", " * 7/9);\n  "])), HEIGHT));
var hoverStyle = lt(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  transition-property: background, border-color;\n  will-change: background, border-color;\n  &:hover {\n    background-color: var(--microlink-hover-background-color, #f5f8fa);\n    border-color: var(--microlink-hover-border-color, #8899a680);\n  }\n"])));
var rtlStyle = (_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return lt(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  flex-direction: ", ";\n"])), isLarge($cardSize) ? "column-reverse" : "row-reverse");
};
var baseStyle = lt(() => "\n  max-width: var(--microlink-max-width, 500px);\n  background-color: var(--microlink-background-color, #fff);\n  border-width: var(--microlink-border-width, 1px);\n  border-style: var(--microlink-border-style, solid);\n  border-color: var(--microlink-border-color, #e1e8ed);\n  color: var(--microlink-color, #181919);\n  overflow: hidden;\n  font-family: ".concat(font.sans, ";\n  display: flex;\n  text-decoration: none;\n  opacity: 1;\n  position: relative;\n  transition-duration: ").concat(speed.medium, ";\n  transition-timing-function: ").concat(animation.medium, ";\n\n  &:active,\n  &:hover {\n    outline: 0;\n  }\n"));
var Element = dt("a")(baseStyle, (_ref3) => {
  let {
    $isLoading,
    contrast
  } = _ref3;
  return !$isLoading && !contrast && hoverStyle;
}, (_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return isLarge($cardSize) && largeStyle;
}, (_ref5) => {
  let {
    direction
  } = _ref5;
  return direction === "rtl" && rtlStyle;
}, (_ref6) => {
  let {
    $backgroundColor,
    color,
    contrast
  } = _ref6;
  return contrast && color && $backgroundColor && contrastStyle;
}, (_ref7) => {
  let {
    $backgroundColor,
    color,
    contrast
  } = _ref7;
  return contrast && (!color || !$backgroundColor) && hoverStyle;
});
var CardWrap = (0, import_react2.forwardRef)((_ref8, ref) => {
  let {
    href,
    rel = "noopener noreferrer",
    target = "_blank",
    as = "a"
  } = _ref8, restProps = _objectWithoutProperties(_ref8, _excluded$1);
  const {
    state: {
      $backgroundColor,
      color,
      title
    },
    props: {
      size: $cardSize
    }
  } = (0, import_react2.useContext)(GlobalContext);
  return (0, import_react2.createElement)(Element, _objectSpread$1(_objectSpread$1(_objectSpread$1({}, as === "a" ? {
    href,
    rel,
    target
  } : void 0), restProps), {}, {
    $backgroundColor,
    $cardSize,
    color,
    ref,
    title
  }));
});
CardWrap.displayName = "CardWrap";
var useIntersectionObserver = (enabled, options) => {
  const [hasIntersected, setHasIntersected] = (0, import_react2.useState)(false);
  const refCallback = (0, import_react2.useCallback)((node2) => {
    if (enabled) {
      const onIntersect = (_ref, self) => {
        let [entry] = _ref;
        if (entry.isIntersecting) {
          setHasIntersected(true);
          self.unobserve(entry.target);
        }
      };
      const observer = new IntersectionObserver(onIntersect, options);
      if (node2 !== null) {
        observer.observe(node2);
      }
    } else {
      setHasIntersected(true);
    }
  }, [enabled, options]);
  return [hasIntersected, refCallback];
};
var _CardEmpty;
var _CardMedia;
var _CardContent;
var _excluded = ["className", "fetchData", "lazy", "loading", "media", "setData", "url", "apiKey"];
var _excluded2 = ["className", "apiKey", "autoPlay", "controls", "direction", "lazy", "loop", "media", "fetchData", "muted", "playsInline", "size"];
function ownKeys(e, r2) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e, r3).enumerable;
    })), t.push.apply(t, o2);
  }
  return t;
}
function _objectSpread(e) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys(Object(t), true).forEach(function(r3) {
      _defineProperty(e, r3, t[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r3) {
      Object.defineProperty(e, r3, Object.getOwnPropertyDescriptor(t, r3));
    });
  }
  return e;
}
var Card = (props) => {
  const {
    className,
    fetchData,
    lazy,
    loading,
    media: mediaProp,
    setData,
    url,
    apiKey
    // destructuring to avoid pass it
  } = props, restProps = _objectWithoutProperties(props, _excluded);
  const mediaProps = (0, import_react2.useMemo)(() => castArray(mediaProp), [mediaProp]);
  const {
    updateState
  } = (0, import_react2.useContext)(GlobalContext);
  const [loadingState, setLoading] = (0, import_react2.useState)(true);
  const [iframeMedia, setIframeMedia] = (0, import_react2.useState)(null);
  const [isError, setIsError] = (0, import_react2.useState)(false);
  const isLoadingUndefined = (0, import_react2.useMemo)(() => loading === void 0, [loading]);
  const [apiUrl, apiUrlProps] = (0, import_react2.useMemo)(() => getApiUrl2(_objectSpread(_objectSpread({}, props), {}, {
    media: mediaProps
  })), [mediaProps, props]);
  const isLazyEnabled = (0, import_react2.useMemo)(() => isLazySupported && (lazy === true || isObject2(lazy)), [lazy]);
  const lazyOptions = (0, import_react2.useMemo)(() => isObject2(lazy) ? lazy : void 0, [lazy]);
  const [hasIntersected, cardRef] = useIntersectionObserver(isLazyEnabled, lazyOptions);
  const canFetchData = (0, import_react2.useMemo)(() => !isLazyEnabled || isLazyEnabled && hasIntersected, [isLazyEnabled, hasIntersected]);
  const mergeData = (0, import_react2.useCallback)((fetchedData) => {
    const payload = isFunction(setData) ? setData(fetchedData) : _objectSpread(_objectSpread({}, fetchedData), setData);
    const {
      title,
      description,
      url: url2,
      video,
      audio,
      image,
      logo,
      iframe
    } = payload;
    const mediaFallback = image || logo || {};
    let media2 = mediaFallback;
    let videoUrl;
    let audioUrl;
    let isVideo = false;
    let isAudio = false;
    const preferredMedia = getPreferredMedia(payload, mediaProps);
    switch (preferredMedia) {
      case "audio":
        isAudio = true;
        audioUrl = getUrlPath(audio);
        break;
      case "video":
        isVideo = true;
        videoUrl = getUrlPath(video);
        break;
      case "iframe":
        setIframeMedia(iframe);
        break;
      default:
        media2 = someProp(payload, mediaProps) || mediaFallback;
        break;
    }
    const imageUrl = getUrlPath(media2);
    const {
      color,
      background_color: $backgroundColor
    } = media2;
    updateState({
      url: url2,
      color,
      title,
      description,
      imageUrl,
      videoUrl,
      audioUrl,
      isVideo,
      isAudio,
      $backgroundColor
    });
    setLoading(false);
  }, [updateState, mediaProps, setData]);
  const toFetchData = (0, import_react2.useCallback)(() => {
    if (canFetchData) {
      setLoading(true);
      const fetch = fetchData ? fetchFromApi(apiUrl, apiUrlProps) : Promise.resolve({});
      fetch.then((_ref) => {
        let {
          data
        } = _ref;
        return mergeData(data);
      }).catch((error) => {
        setLoading(false);
        setIsError(true);
        console.error("\n┌───────────────┐\n│ Microlink SDK │\n└───────────────┘\n\n".concat(error.description, "\n\n").concat(JSON.stringify(error.data), "\n\nid   ").concat(error.headers["x-request-id"], "\nuri  ").concat(error.url, "\ncode ").concat(error.code, " (").concat(error.statusCode, ")\n\nmicrolink.io/").concat(error.code.toLowerCase(), "\n"));
      });
    }
  }, [apiUrlProps, fetchData, apiUrl, mergeData, canFetchData]);
  (0, import_react2.useEffect)(toFetchData, [url, setData, hasIntersected]);
  const isLoading = isLoadingUndefined ? loadingState : loading;
  if (isError) {
    return import_react2.default.createElement("a", _extends({
      href: url
    }, restProps), url);
  }
  if (iframeMedia) {
    if (!isSSR) {
      iframeMedia.scripts.forEach((attrs) => {
        const hasScript = document.querySelector('script[src="'.concat(attrs.src, '"]'));
        if (!hasScript) {
          const script = document.createElement("script");
          Object.keys(attrs).forEach((key) => script[key] = attrs[key]);
          document.body.appendChild(script);
        }
      });
    }
    return import_react2.default.createElement("div", _extends({
      className: classNames.iframe,
      dangerouslySetInnerHTML: {
        __html: iframeMedia.html
      }
    }, restProps));
  }
  return import_react2.default.createElement(CardWrap, _extends({
    className: "".concat(classNames.main, " ").concat(className).trim(),
    href: url,
    $isLoading: isLoading,
    ref: cardRef
  }, restProps), isLoading ? _CardEmpty || (_CardEmpty = import_react2.default.createElement(CardEmptyState, null)) : import_react2.default.createElement(import_react2.default.Fragment, null, _CardMedia || (_CardMedia = import_react2.default.createElement(CardMedia, null)), _CardContent || (_CardContent = import_react2.default.createElement(CardContent, null))));
};
var Microlink = (_ref2) => {
  let {
    className = "",
    apiKey = void 0,
    autoPlay = true,
    controls = true,
    direction = "ltr",
    lazy = true,
    loop = true,
    media: media2 = ["iframe", "video", "audio", "image", "logo"],
    fetchData = true,
    muted = true,
    playsInline = true,
    size = "normal"
  } = _ref2, props = _objectWithoutProperties(_ref2, _excluded2);
  return import_react2.default.createElement(GlobalState, _extends({
    className,
    apiKey,
    autoPlay,
    controls,
    direction,
    lazy,
    loop,
    media: media2,
    fetchData,
    muted,
    playsInline,
    size
  }, props), (otherProps) => import_react2.default.createElement(Card, otherProps));
};
export {
  Microlink as default,
  fetchFromApi,
  getApiUrl2 as getApiUrl,
  imageProxy
};
/*! Bundled license information:

@microlink/mql/lightweight/index.js:
  (*! MIT License © Sindre Sorhus *)
*/
//# sourceMappingURL=@microlink_react.js.map
